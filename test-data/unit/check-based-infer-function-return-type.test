[case testInferReturnType]
def m():
    a: int = f()
    b = f()
    reveal_type(b)  # N: Revealed type is "int"
    e: str = f()  # E: Incompatible types in assignment (expression has type "int", variable has type "str")  [assignment]

def f():
    return 1

c: int = f()
d: str = f()  # E: Incompatible types in assignment (expression has type "int", variable has type "str")  [assignment]

reveal_type(f)  # N: Revealed type is "def () -> 1"


[case testInferGenerator]
def f2():
    yield 1
    a: int = yield 1
    return 2

def f3() -> Generator[int, int, None]:
    a: int = yield 1

f = f2()
