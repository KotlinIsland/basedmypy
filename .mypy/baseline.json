{
  "mypy/applytype.py": [
    {
      "code": "dynamic",
      "line": 97,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.applytype.apply_generic_arguments"
    }
  ],
  "mypy/bogus_type.py": [
    {
      "code": "dynamic",
      "line": 24,
      "message": "Expression type contains \"Any\" (has type \"Type[FlexibleAlias[Any, Any]]\")",
      "target": "mypy.bogus_type"
    },
    {
      "code": "dynamic",
      "line": 24,
      "message": "Expression type contains \"Any\" (has type \"Type[FlexibleAlias[Any, Any]]\")",
      "target": "mypy.bogus_type"
    },
    {
      "code": "dynamic",
      "line": 24,
      "message": "Expression type contains \"Any\" (has type \"Type[FlexibleAlias[Any, Any]]\")",
      "target": "mypy.bogus_type"
    },
    {
      "code": "dynamic",
      "line": 24,
      "message": "Expression type contains \"Any\" (has type \"Type[FlexibleAlias[Any, Any]]\")",
      "target": "mypy.bogus_type"
    }
  ],
  "mypy/build.py": [
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build._build"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build._build"
    },
    {
      "code": "dynamic",
      "line": 231,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build._build"
    },
    {
      "code": "dynamic",
      "line": 231,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build._build"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build"
    },
    {
      "code": "dynamic",
      "line": 329,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 336,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, int]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[str]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[str]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[int]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"List[Union[int, Any]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 349,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 349,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[int]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 349,
      "message": "Expression type contains \"Any\" (has type \"List[Union[int, Any]]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.cache_meta_from_dict"
    },
    {
      "code": "dynamic",
      "line": 443,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 449,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 449,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 452,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 453,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 458,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 461,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 461,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 461,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 461,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.load_plugins_from_config"
    },
    {
      "code": "dynamic",
      "line": 504,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.take_module_snapshot"
    },
    {
      "code": "dynamic",
      "line": 505,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.build.take_module_snapshot"
    },
    {
      "code": "dynamic",
      "line": 588,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.BuildManager.__init__"
    },
    {
      "code": "dynamic",
      "line": 812,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 814,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Set[Any]]\")",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 815,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 817,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Set[Any]]\")",
      "target": "mypy.build.BuildManager.load_fine_grained_deps"
    },
    {
      "code": "dynamic",
      "line": 854,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 856,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 859,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 859,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.BuildManager.add_stats"
    },
    {
      "code": "dynamic",
      "line": 862,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.BuildManager.stats_summary"
    },
    {
      "code": "dynamic",
      "line": 866,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.build.deps_to_json"
    },
    {
      "code": "dynamic",
      "line": 866,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.build.deps_to_json"
    },
    {
      "code": "dynamic",
      "line": 927,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.write_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 928,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.write_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1012,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.read_plugins_snapshot"
    },
    {
      "code": "dynamic",
      "line": 1015,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.read_plugins_snapshot"
    },
    {
      "code": "dynamic",
      "line": 1017,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.read_plugins_snapshot"
    },
    {
      "code": "dynamic",
      "line": 1021,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.read_plugins_snapshot"
    },
    {
      "code": "dynamic",
      "line": 1031,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1037,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1038,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any, Any]\")",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1038,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1038,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1038,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_quickstart_file"
    },
    {
      "code": "dynamic",
      "line": 1053,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1056,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1058,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1058,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1065,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1065,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1065,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1065,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1071,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1071,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1073,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1073,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1073,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1073,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1073,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1075,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1075,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1075,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1075,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1075,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1078,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1079,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1079,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "no-any-return",
      "line": 1082,
      "message": "Returning Any from function declared to return \"Optional[Dict[str, FgDepMeta]]\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1082,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.read_deps_cache"
    },
    {
      "code": "dynamic",
      "line": 1085,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build._load_json_file"
    },
    {
      "code": "dynamic",
      "line": 1100,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build._load_json_file"
    },
    {
      "code": "no-any-return",
      "line": 1114,
      "message": "Returning Any from function declared to return \"Optional[Dict[str, Any]]\"",
      "target": "mypy.build._load_json_file"
    },
    {
      "code": "dynamic",
      "line": 1114,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build._load_json_file"
    },
    {
      "code": "dynamic",
      "line": 1203,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1219,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1223,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1225,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1229,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1229,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1236,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1236,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1237,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1237,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1237,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1237,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1238,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1238,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1238,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1243,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1243,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1243,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1243,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1244,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1244,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1246,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1246,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1246,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1246,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1246,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1252,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1276,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1277,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1279,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1279,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1279,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1279,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1284,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.find_cache_meta"
    },
    {
      "code": "dynamic",
      "line": 1287,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1301,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1305,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1305,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1315,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1319,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1319,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1353,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1353,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1353,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1353,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1359,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1359,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1359,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1359,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1359,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1359,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1366,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1366,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1368,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1369,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1381,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1381,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1384,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1392,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1394,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1400,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1400,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1401,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1401,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1402,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1402,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1405,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1405,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1406,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1406,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1407,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1407,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1409,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1409,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1410,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1410,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1410,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1410,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1410,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1413,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1415,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1418,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1423,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1427,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.validate_meta"
    },
    {
      "code": "dynamic",
      "line": 1439,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.json_dumps"
    },
    {
      "code": "dynamic",
      "line": 1441,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.json_dumps"
    },
    {
      "code": "dynamic",
      "line": 1443,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.json_dumps"
    },
    {
      "code": "dynamic",
      "line": 1446,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1494,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1546,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1560,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1560,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1560,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1564,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1571,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, CacheMeta]\")",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1571,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1571,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.write_cache"
    },
    {
      "code": "dynamic",
      "line": 1754,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build"
    },
    {
      "code": "dynamic",
      "line": 1857,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1858,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1859,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1865,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1867,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1870,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1870,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1872,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1872,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1875,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1875,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1877,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1877,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1878,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1878,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1880,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1880,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.__init__"
    },
    {
      "code": "dynamic",
      "line": 1909,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.build.State.xmeta"
    },
    {
      "code": "dynamic",
      "line": 1909,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[State], CacheMeta]\")",
      "target": "mypy.build"
    },
    {
      "code": "dynamic",
      "line": 1910,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.xmeta"
    },
    {
      "code": "dynamic",
      "line": 1911,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.xmeta"
    },
    {
      "code": "dynamic",
      "line": 1935,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.is_fresh"
    },
    {
      "code": "dynamic",
      "line": 1935,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.is_fresh"
    },
    {
      "code": "dynamic",
      "line": 1937,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.is_fresh"
    },
    {
      "code": "dynamic",
      "line": 1937,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.is_fresh"
    },
    {
      "code": "dynamic",
      "line": 1987,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.load_tree"
    },
    {
      "code": "dynamic",
      "line": 1990,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.State.load_tree"
    },
    {
      "code": "dynamic",
      "line": 1990,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.State.load_tree"
    },
    {
      "code": "dynamic",
      "line": 1992,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.build.State.load_tree"
    },
    {
      "code": "dynamic",
      "line": 1997,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.State.load_tree"
    },
    {
      "code": "dynamic",
      "line": 2308,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Optional[CacheMeta]]\")",
      "target": "mypy.build.State.write_cache"
    },
    {
      "code": "dynamic",
      "line": 2308,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Optional[CacheMeta]]\")",
      "target": "mypy.build.State.write_cache"
    },
    {
      "code": "dynamic",
      "line": 2370,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.generate_unused_ignore_notes"
    },
    {
      "code": "dynamic",
      "line": 2379,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.State.generate_no_code_ignore_notes"
    },
    {
      "code": "dynamic",
      "line": 2659,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.log_configuration"
    },
    {
      "code": "dynamic",
      "line": 2660,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.log_configuration"
    },
    {
      "code": "dynamic",
      "line": 2688,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, int]\")",
      "target": "mypy.build.dispatch"
    },
    {
      "code": "dynamic",
      "line": 2688,
      "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
      "target": "mypy.build.dispatch"
    },
    {
      "code": "dynamic",
      "line": 2734,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.dispatch"
    },
    {
      "code": "dynamic",
      "line": 2734,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.dispatch"
    },
    {
      "code": "dynamic",
      "line": 2734,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.dispatch"
    },
    {
      "code": "dynamic",
      "line": 2736,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.build.dispatch"
    },
    {
      "code": "dynamic",
      "line": 3007,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3007,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3008,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3009,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3009,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3009,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3009,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3012,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3012,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3012,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3012,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3015,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3020,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3024,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3024,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.build.process_graph"
    },
    {
      "code": "dynamic",
      "line": 3137,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypy.build.order_ascc"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.sorted_components"
    },
    {
      "code": "dynamic",
      "line": 3252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.build.sorted_components"
    }
  ],
  "mypy/checker.py": [
    {
      "code": "attr-defined",
      "line": 72,
      "message": "Module \"mypy.semanal\" does not explicitly export attribute \"set_callable_name\"; implicit reexport disabled",
      "target": "mypy.checker"
    },
    {
      "code": "attr-defined",
      "line": 72,
      "message": "Module \"mypy.semanal\" does not explicitly export attribute \"set_callable_name\"; implicit reexport disabled",
      "target": "mypy.checker"
    },
    {
      "code": "dynamic",
      "line": 508,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
    },
    {
      "code": "dynamic",
      "line": 524,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
    },
    {
      "code": "dynamic",
      "line": 534,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
    },
    {
      "code": "dynamic",
      "line": 539,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_overlapping_overloads"
    },
    {
      "code": "dynamic",
      "line": 834,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_func_item"
    },
    {
      "code": "dynamic",
      "line": 881,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_func_def"
    },
    {
      "code": "dynamic",
      "line": 881,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_func_def"
    },
    {
      "code": "dynamic",
      "line": 1095,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
    },
    {
      "code": "dynamic",
      "line": 1095,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
    },
    {
      "code": "dynamic",
      "line": 1115,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_for_missing_annotations"
    },
    {
      "code": "dynamic",
      "line": 1329,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_overlapping_op_methods"
    },
    {
      "code": "dynamic",
      "line": 1472,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1472,
      "message": "Expression type contains \"Any\" (has type \"product[Tuple[Any, ...]]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1473,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1473,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1473,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1474,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1475,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.checker.TypeChecker.expand_typevars"
    },
    {
      "code": "dynamic",
      "line": 1646,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.get_op_other_domain"
    },
    {
      "code": "dynamic",
      "line": 1690,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1690,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1690,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1699,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1699,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1700,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1700,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_override"
    },
    {
      "code": "dynamic",
      "line": 1777,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check__exit__return_type"
    },
    {
      "code": "unreachable",
      "line": 1950,
      "message": "Statement is unreachable",
      "target": "mypy.checker.TypeChecker.determine_type_of_class_member"
    },
    {
      "code": "dynamic",
      "line": 2271,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_assignment"
    },
    {
      "code": "dynamic",
      "line": 2271,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_assignment"
    },
    {
      "code": "dynamic",
      "line": 2431,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_compatibility_super"
    },
    {
      "code": "dynamic",
      "line": 2431,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_compatibility_super"
    },
    {
      "code": "dynamic",
      "line": 2432,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_compatibility_super"
    },
    {
      "code": "dynamic",
      "line": 2490,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.lvalue_type_from_base"
    },
    {
      "code": "dynamic",
      "line": 2490,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.lvalue_type_from_base"
    },
    {
      "code": "dynamic",
      "line": 2659,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.checker.TypeChecker.is_assignable_slot"
    },
    {
      "code": "dynamic",
      "line": 2841,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2841,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2841,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2841,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2841,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2843,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2843,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2844,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2844,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.TypeChecker.check_multi_assignment_from_union"
    },
    {
      "code": "dynamic",
      "line": 2971,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.type_is_iterable"
    },
    {
      "code": "dynamic",
      "line": 2971,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.type_is_iterable"
    },
    {
      "code": "dynamic",
      "line": 3272,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_member_assignment"
    },
    {
      "code": "dynamic",
      "line": 3282,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_member_assignment"
    },
    {
      "code": "dynamic",
      "line": 3282,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_member_assignment"
    },
    {
      "code": "dynamic",
      "line": 4962,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_subtype"
    },
    {
      "code": "dynamic",
      "line": 4962,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_subtype"
    },
    {
      "code": "dynamic",
      "line": 4966,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.checker.TypeChecker.check_subtype"
    },
    {
      "code": "dynamic",
      "line": 4966,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.checker.TypeChecker.check_subtype"
    },
    {
      "code": "dynamic",
      "line": 4966,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_subtype"
    },
    {
      "code": "dynamic",
      "line": 4966,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.check_subtype"
    },
    {
      "code": "no-error-code",
      "line": 4995,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 5253,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.TypeChecker.iterable_item_type"
    },
    {
      "code": "dynamic",
      "line": 5797,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.overload_can_never_match"
    },
    {
      "code": "dynamic",
      "line": 5807,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.is_more_general_arg_prefix"
    },
    {
      "code": "dynamic",
      "line": 5808,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.is_more_general_arg_prefix"
    },
    {
      "code": "dynamic",
      "line": 6152,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.checker.group_comparison_operands"
    },
    {
      "code": "dynamic",
      "line": 6152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.group_comparison_operands"
    },
    {
      "code": "dynamic",
      "line": 6152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checker.group_comparison_operands"
    },
    {
      "code": "dynamic",
      "line": 6158,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.is_typed_callable"
    },
    {
      "code": "dynamic",
      "line": 6168,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checker.is_untyped_decorator"
    }
  ],
  "mypy/checkexpr.py": [
    {
      "code": "dynamic",
      "line": 225,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.analyze_ref_expr"
    },
    {
      "code": "dynamic",
      "line": 225,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.analyze_ref_expr"
    },
    {
      "code": "no-error-code",
      "line": 226,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
    },
    {
      "code": "dynamic",
      "line": 345,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
    },
    {
      "code": "dynamic",
      "line": 345,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_call_expr_inner"
    },
    {
      "code": "dynamic",
      "line": 411,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.method_fullname"
    },
    {
      "code": "dynamic",
      "line": 411,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.method_fullname"
    },
    {
      "code": "dynamic",
      "line": 442,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.always_returns_none"
    },
    {
      "code": "dynamic",
      "line": 442,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.always_returns_none"
    },
    {
      "code": "dynamic",
      "line": 458,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
    },
    {
      "code": "dynamic",
      "line": 458,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
    },
    {
      "code": "dynamic",
      "line": 464,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
    },
    {
      "code": "dynamic",
      "line": 464,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.defn_returns_none"
    },
    {
      "code": "dynamic",
      "line": 476,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_runtime_protocol_test"
    },
    {
      "code": "dynamic",
      "line": 476,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_runtime_protocol_test"
    },
    {
      "code": "dynamic",
      "line": 484,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_protocol_issubclass"
    },
    {
      "code": "dynamic",
      "line": 484,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_protocol_issubclass"
    },
    {
      "code": "dynamic",
      "line": 772,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.apply_signature_hook"
    },
    {
      "code": "dynamic",
      "line": 789,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.apply_signature_hook"
    },
    {
      "code": "dynamic",
      "line": 937,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_call"
    },
    {
      "code": "dynamic",
      "line": 1083,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee"
    },
    {
      "code": "dynamic",
      "line": 1086,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee"
    },
    {
      "code": "dynamic",
      "line": 1101,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.analyze_type_type_callee"
    },
    {
      "code": "unreachable",
      "line": 1514,
      "message": "Statement is unreachable",
      "target": "mypy.checkexpr.ExpressionChecker.check_argument_types"
    },
    {
      "code": "dynamic",
      "line": 1551,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_arg"
    },
    {
      "code": "dynamic",
      "line": 1551,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_arg"
    },
    {
      "code": "dynamic",
      "line": 1609,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1609,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1609,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1609,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1609,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1614,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1614,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1617,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkexpr.ExpressionChecker.check_overload_call"
    },
    {
      "code": "dynamic",
      "line": 1929,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.combine_function_signatures"
    },
    {
      "code": "dynamic",
      "line": 2845,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_boolean_op"
    },
    {
      "code": "dynamic",
      "line": 2845,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_boolean_op"
    },
    {
      "code": "dynamic",
      "line": 2990,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_index_with_type"
    },
    {
      "code": "dynamic",
      "line": 2990,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_index_with_type"
    },
    {
      "code": "dynamic",
      "line": 3188,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_type_application"
    },
    {
      "code": "dynamic",
      "line": 3188,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_type_application"
    },
    {
      "code": "no-error-code",
      "line": 3228,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 3267,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.apply_type_arguments_to_callable"
    },
    {
      "code": "dynamic",
      "line": 3592,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context"
    },
    {
      "code": "dynamic",
      "line": 3596,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context"
    },
    {
      "code": "dynamic",
      "line": 3605,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.infer_lambda_type_using_context"
    },
    {
      "code": "dynamic",
      "line": 3874,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.checkexpr.ExpressionChecker.check_for_comp"
    },
    {
      "code": "dynamic",
      "line": 3887,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.checkexpr.ExpressionChecker.visit_conditional_expr"
    },
    {
      "code": "dynamic",
      "line": 4036,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.has_member"
    },
    {
      "code": "dynamic",
      "line": 4036,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.ExpressionChecker.has_member"
    },
    {
      "code": "dynamic",
      "line": 4406,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.arg_approximate_similarity"
    },
    {
      "code": "dynamic",
      "line": 4407,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded], Type[TypeType]]\")",
      "target": "mypy.checkexpr.arg_approximate_similarity"
    },
    {
      "code": "dynamic",
      "line": 4407,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.arg_approximate_similarity"
    },
    {
      "code": "dynamic",
      "line": 4427,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkexpr.arg_approximate_similarity"
    }
  ],
  "mypy/checkmember.py": [
    {
      "code": "dynamic",
      "line": 405,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.analyze_member_var_access"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.analyze_member_var_access"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.analyze_member_var_access"
    },
    {
      "code": "dynamic",
      "line": 520,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.analyze_descriptor_access"
    },
    {
      "code": "dynamic",
      "line": 599,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.analyze_var"
    },
    {
      "code": "dynamic",
      "line": 621,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.freeze_type_vars"
    },
    {
      "code": "unreachable",
      "line": 783,
      "message": "Right operand of \"and\" is never evaluated",
      "target": "mypy.checkmember.analyze_class_attribute_access"
    },
    {
      "code": "unreachable",
      "line": 821,
      "message": "Statement is unreachable",
      "target": "mypy.checkmember.analyze_class_attribute_access"
    },
    {
      "code": "dynamic",
      "line": 925,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.checkmember.add_class_tvars"
    },
    {
      "code": "unreachable",
      "line": 1041,
      "message": "Statement is unreachable",
      "target": "mypy.checkmember.is_valid_constructor"
    }
  ],
  "mypy/checkstrformat.py": [
    {
      "code": "dynamic",
      "line": 124,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 134,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 134,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 137,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 137,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Union[str, Any]]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.__init__"
    },
    {
      "code": "dynamic",
      "line": 143,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_key"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.ConversionSpecifier.has_star"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None, bool]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 191,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 191,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 191,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None, bool]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 192,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 192,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 192,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 197,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.parse_format_value"
    },
    {
      "code": "dynamic",
      "line": 314,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None, bool]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression type contains \"Any\" (has type \"Union[Literal[True], str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 330,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 330,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_specs_in_format_call"
    },
    {
      "code": "dynamic",
      "line": 369,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 369,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 387,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, bool]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, bool]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.perform_special_format_checks"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None, bool]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 484,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 493,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 497,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 500,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 500,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.auto_generate_keys"
    },
    {
      "code": "dynamic",
      "line": 510,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 513,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.apply_field_accessors"
    },
    {
      "code": "dynamic",
      "line": 557,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 566,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.validate_and_transform_accessors"
    },
    {
      "code": "dynamic",
      "line": 626,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers"
    },
    {
      "code": "dynamic",
      "line": 626,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers"
    },
    {
      "code": "dynamic",
      "line": 626,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.analyze_conversion_specifiers"
    },
    {
      "code": "dynamic",
      "line": 706,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 706,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 709,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 710,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 710,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 711,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 713,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 713,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 714,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 715,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 721,
      "message": "Expression has type \"Any\"",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 721,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 723,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 723,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.check_mapping_str_interpolation"
    },
    {
      "code": "dynamic",
      "line": 775,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 775,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 777,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 777,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 780,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 780,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 781,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 785,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 785,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 785,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 785,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 785,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    },
    {
      "code": "dynamic",
      "line": 786,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.checkstrformat.StringFormatterChecker.replacement_checkers"
    }
  ],
  "mypy/config_parser.py": [
    {
      "code": "dynamic",
      "line": 20,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 28,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.config_parser.parse_version"
    },
    {
      "code": "dynamic",
      "line": 28,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.config_parser.parse_version"
    },
    {
      "code": "dynamic",
      "line": 47,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.config_parser.try_split"
    },
    {
      "code": "dynamic",
      "line": 47,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.config_parser.try_split"
    },
    {
      "code": "dynamic",
      "line": 47,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.config_parser.try_split"
    },
    {
      "code": "dynamic",
      "line": 47,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.config_parser.try_split"
    },
    {
      "code": "dynamic",
      "line": 114,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Callable[[Any], Any]]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 114,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 114,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "no-any-return",
      "line": 114,
      "message": "Returning Any from function declared to return \"Union[str, bool, int, float, Dict[str, str], List[str], Tuple[int, int]]\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 117,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 117,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 117,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 117,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 126,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 126,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 126,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 126,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 127,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 127,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 127,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 127,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 135,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 141,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[int, int]]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 143,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], List[str]]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 144,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], List[str]]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 145,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypy.config_parser"
    },
    {
      "code": "dynamic",
      "line": 182,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Dict[Union[str, Any], Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 185,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[str, Any]]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Dict[str, Any]]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 188,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 188,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 197,
      "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 215,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 215,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression type contains \"Any\" (has type \"MutableMapping[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 224,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 224,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_config_file"
    },
    {
      "code": "dynamic",
      "line": 264,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 296,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 296,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 305,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 319,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 319,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 320,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 320,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.destructure_overrides"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 385,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[Type[Any], Type[None]]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 392,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 395,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 398,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 398,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 418,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 424,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 432,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 435,
      "message": "Expression has type \"Any\"",
      "target": "mypy.config_parser.parse_section"
    },
    {
      "code": "dynamic",
      "line": 439,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.config_parser.convert_to_boolean"
    },
    {
      "code": "dynamic",
      "line": 441,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.convert_to_boolean"
    },
    {
      "code": "dynamic",
      "line": 443,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.convert_to_boolean"
    },
    {
      "code": "dynamic",
      "line": 444,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.config_parser.convert_to_boolean"
    }
  ],
  "mypy/constraints.py": [
    {
      "code": "unreachable",
      "line": 271,
      "message": "Statement is unreachable",
      "target": "mypy.constraints.any_constraints"
    },
    {
      "code": "dynamic",
      "line": 412,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 412,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 412,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 412,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_instance"
    },
    {
      "code": "no-error-code",
      "line": 437,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 545,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 667,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.constraints.ConstraintBuilderVisitor.visit_type_type"
    }
  ],
  "mypy/dmypy/client.py": [
    {
      "code": "dynamic",
      "line": 150,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.main"
    },
    {
      "code": "dynamic",
      "line": 156,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.dmypy.client.main"
    },
    {
      "code": "dynamic",
      "line": 156,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.main"
    },
    {
      "code": "dynamic",
      "line": 195,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_start"
    },
    {
      "code": "dynamic",
      "line": 228,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.start_server"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.start_server"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.start_server"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.start_server"
    },
    {
      "code": "dynamic",
      "line": 231,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.start_server"
    },
    {
      "code": "dynamic",
      "line": 268,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 272,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 272,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 272,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 274,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 275,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 275,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 275,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 275,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 277,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 277,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 280,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_run"
    },
    {
      "code": "dynamic",
      "line": 290,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 296,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 296,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_status"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_stop"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_stop"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_stop"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_stop"
    },
    {
      "code": "dynamic",
      "line": 321,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_kill"
    },
    {
      "code": "dynamic",
      "line": 321,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_kill"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 336,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_check"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 359,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_recheck"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 376,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_suggest"
    },
    {
      "code": "dynamic",
      "line": 379,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 386,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 387,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 387,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 392,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 406,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 408,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 409,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_output"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_hang"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.do_hang"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_hang"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_hang"
    },
    {
      "code": "dynamic",
      "line": 434,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 436,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 436,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 436,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 436,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 436,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 438,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 439,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 440,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 440,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 445,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 446,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 447,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 447,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.do_daemon"
    },
    {
      "code": "dynamic",
      "line": 459,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy.client.request"
    },
    {
      "code": "dynamic",
      "line": 486,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.request"
    },
    {
      "code": "dynamic",
      "line": 503,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 510,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 512,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 512,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 513,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 519,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 519,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 520,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.check_status"
    },
    {
      "code": "dynamic",
      "line": 535,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.read_status"
    },
    {
      "code": "dynamic",
      "line": 538,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy.client.read_status"
    }
  ],
  "mypy/dmypy_server.py": [
    {
      "code": "dynamic",
      "line": 214,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 218,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 219,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 223,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 223,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 224,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 227,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 235,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 238,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 239,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 242,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 242,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 251,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 251,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.dmypy_server.Server.serve"
    },
    {
      "code": "dynamic",
      "line": 264,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.dmypy_server.Server.run_command"
    },
    {
      "code": "dynamic",
      "line": 265,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.dmypy_server.Server.run_command"
    },
    {
      "code": "no-any-return",
      "line": 272,
      "message": "Returning Any from function declared to return \"Dict[str, object]\"",
      "target": "mypy.dmypy_server.Server.run_command"
    },
    {
      "code": "dynamic",
      "line": 272,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.run_command"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_status"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_status"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_status"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_status"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_run"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_check"
    },
    {
      "code": "dynamic",
      "line": 364,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.Server.cmd_recheck"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_recheck"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_recheck"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_recheck"
    },
    {
      "code": "dynamic",
      "line": 380,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.Server.check"
    },
    {
      "code": "dynamic",
      "line": 388,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.check"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.check"
    },
    {
      "code": "dynamic",
      "line": 397,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.check"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.Server.update_stats"
    },
    {
      "code": "dynamic",
      "line": 408,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.update_stats"
    },
    {
      "code": "dynamic",
      "line": 408,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.update_stats"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 432,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 450,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 451,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 455,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 455,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 455,
      "message": "Expression type contains \"Any\" (has type \"CacheMeta\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 493,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.initialize_fine_grained"
    },
    {
      "code": "dynamic",
      "line": 757,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.Server.increment_output"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.increment_output"
    },
    {
      "code": "dynamic",
      "line": 836,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.Server.cmd_suggest"
    },
    {
      "code": "dynamic",
      "line": 845,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_suggest"
    },
    {
      "code": "dynamic",
      "line": 845,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.Server.cmd_suggest"
    },
    {
      "code": "dynamic",
      "line": 874,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 875,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "no-error-code",
      "line": 877,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 879,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 884,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 884,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 885,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 885,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 886,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 886,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 886,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 886,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 887,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 887,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 887,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 887,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 898,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.get_meminfo"
    },
    {
      "code": "dynamic",
      "line": 899,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.dmypy_server.get_meminfo"
    }
  ],
  "mypy/dmypy_util.py": [
    {
      "code": "dynamic",
      "line": 16,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 29,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.dmypy_util.receive"
    }
  ],
  "mypy/errors.py": [
    {
      "code": "unreachable",
      "line": 724,
      "message": "Statement is unreachable",
      "target": "mypy.errors.Errors.render_messages"
    },
    {
      "code": "dynamic",
      "line": 755,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[Any, Any]]\")",
      "target": "mypy.errors.Errors.sort_messages"
    },
    {
      "code": "dynamic",
      "line": 755,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypy.errors.Errors.sort_messages"
    },
    {
      "code": "dynamic",
      "line": 755,
      "message": "Expression has type \"Any\"",
      "target": "mypy.errors.Errors.sort_messages"
    },
    {
      "code": "dynamic",
      "line": 755,
      "message": "Expression has type \"Any\"",
      "target": "mypy.errors.Errors.sort_messages"
    },
    {
      "code": "dynamic",
      "line": 803,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.errors.Errors.save_baseline"
    },
    {
      "code": "dynamic",
      "line": 804,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.errors.Errors.save_baseline"
    },
    {
      "code": "dynamic",
      "line": 805,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.errors.Errors.save_baseline"
    }
  ],
  "mypy/expandtype.py": [
    {
      "code": "dynamic",
      "line": 38,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.expandtype.freshen_function_type_vars"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.expandtype.ExpandTypeVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 143,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.expandtype.ExpandTypeVisitor.visit_overloaded"
    }
  ],
  "mypy/fastparse.py": [
    {
      "code": "dynamic",
      "line": 108,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 168,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 173,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 173,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 173,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "no-any-return",
      "line": 189,
      "message": "Returning Any from function declared to return \"MypyFile\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 189,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.fastparse.parse_type_ignore_tag"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.fastparse.parse_type_ignore_tag"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.fastparse.parse_type_ignore_tag"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.fastparse.parse_type_ignore_tag"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.fastparse.parse_type_ignore_tag"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.parse_type_comment"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse_type_comment"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.parse_type_comment"
    },
    {
      "code": "dynamic",
      "line": 243,
      "message": "Expression type contains \"Any\" (has type \"Type[Expression]\")",
      "target": "mypy.fastparse.parse_type_comment"
    },
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse.is_no_type_check_decorator"
    },
    {
      "code": "dynamic",
      "line": 288,
      "message": "Expression type contains \"Any\" (has type \"Type[Attribute]\")",
      "target": "mypy.fastparse.is_no_type_check_decorator"
    },
    {
      "code": "dynamic",
      "line": 289,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse.is_no_type_check_decorator"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.__init__"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression type contains \"Any\" (has type \"Dict[type, Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression type contains \"Any\" (has type \"Optional[Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Optional[Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression type contains \"Any\" (has type \"Dict[type, Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression type contains \"Any\" (has type \"Union[Callable[[Optional[AST]], Any], Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse.ASTConverter.set_line"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression type contains \"Any\" (has type \"Type[expr]\")",
      "target": "mypy.fastparse.ASTConverter.set_line"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.translate_opt_expr_list"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.translate_opt_expr_list"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[AsyncFunctionDef], Type[ClassDef], Type[FunctionDef]]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[AsyncFunctionDef], Type[ClassDef], Type[FunctionDef]]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Type[AsyncFunctionDef]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Type[AsyncFunctionDef]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Type[ClassDef]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Type[ClassDef]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionDef]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionDef]\")",
      "target": "mypy.fastparse.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.translate_stmt_list"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.translate_stmt_list"
    },
    {
      "code": "dynamic",
      "line": 392,
      "message": "Expression type contains \"Any\" (has type \"Type[Add]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 392,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Add], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 393,
      "message": "Expression type contains \"Any\" (has type \"Type[Sub]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 393,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Sub], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Type[Mult]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Mult], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 395,
      "message": "Expression type contains \"Any\" (has type \"Type[MatMult]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 395,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[MatMult], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression type contains \"Any\" (has type \"Type[Div]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Div], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 397,
      "message": "Expression type contains \"Any\" (has type \"Type[Mod]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 397,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Mod], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 398,
      "message": "Expression type contains \"Any\" (has type \"Type[Pow]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 398,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Pow], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 399,
      "message": "Expression type contains \"Any\" (has type \"Type[LShift]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 399,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[LShift], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression type contains \"Any\" (has type \"Type[RShift]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[RShift], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression type contains \"Any\" (has type \"Type[BitOr]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BitOr], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression type contains \"Any\" (has type \"Type[BitXor]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BitXor], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 403,
      "message": "Expression type contains \"Any\" (has type \"Type[BitAnd]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 403,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BitAnd], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"Type[FloorDiv]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[FloorDiv], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 415,
      "message": "Expression type contains \"Any\" (has type \"Type[Gt]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 415,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Gt], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Expression type contains \"Any\" (has type \"Type[Lt]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Lt], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 417,
      "message": "Expression type contains \"Any\" (has type \"Type[Eq]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 417,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Eq], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 418,
      "message": "Expression type contains \"Any\" (has type \"Type[GtE]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 418,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[GtE], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 419,
      "message": "Expression type contains \"Any\" (has type \"Type[LtE]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 419,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[LtE], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"Type[NotEq]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[NotEq], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 421,
      "message": "Expression type contains \"Any\" (has type \"Type[Is]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 421,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Is], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 422,
      "message": "Expression type contains \"Any\" (has type \"Type[IsNot]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 422,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[IsNot], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 423,
      "message": "Expression type contains \"Any\" (has type \"Type[In]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 423,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[In], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 424,
      "message": "Expression type contains \"Any\" (has type \"Type[NotIn]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 424,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[NotIn], str]\")",
      "target": "mypy.fastparse"
    },
    {
      "code": "dynamic",
      "line": 500,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Module"
    },
    {
      "code": "dynamic",
      "line": 548,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionType]\")",
      "target": "mypy.fastparse.ASTConverter.do_func_def"
    },
    {
      "code": "dynamic",
      "line": 551,
      "message": "Expression type contains \"Any\" (has type \"Type[Ellipsis]\")",
      "target": "mypy.fastparse.ASTConverter.do_func_def"
    },
    {
      "code": "dynamic",
      "line": 618,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.fastparse.ASTConverter.do_func_def"
    },
    {
      "code": "dynamic",
      "line": 672,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 673,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 673,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 675,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 677,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 677,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 677,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 677,
      "message": "Expression type contains \"Any\" (has type \"enumerate[Any]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 677,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 677,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 678,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 678,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 679,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 679,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 680,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Tuple[Any, expr]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Tuple[Any, expr]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, expr]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, expr]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"enumerate[Tuple[Any, expr]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Any, expr]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 684,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 684,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 685,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 686,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 696,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 700,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.transform_args"
    },
    {
      "code": "dynamic",
      "line": 728,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.make_argument"
    },
    {
      "code": "dynamic",
      "line": 740,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 740,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 740,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 747,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 747,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 747,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 747,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 748,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.fastparse.ASTConverter.visit_ClassDef"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Return"
    },
    {
      "code": "dynamic",
      "line": 774,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Delete"
    },
    {
      "code": "dynamic",
      "line": 780,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Assign"
    },
    {
      "code": "dynamic",
      "line": 782,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Assign"
    },
    {
      "code": "dynamic",
      "line": 797,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AnnAssign"
    },
    {
      "code": "dynamic",
      "line": 803,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AugAssign"
    },
    {
      "code": "dynamic",
      "line": 804,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AugAssign"
    },
    {
      "code": "dynamic",
      "line": 810,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_For"
    },
    {
      "code": "dynamic",
      "line": 811,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_For"
    },
    {
      "code": "dynamic",
      "line": 820,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AsyncFor"
    },
    {
      "code": "dynamic",
      "line": 821,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AsyncFor"
    },
    {
      "code": "dynamic",
      "line": 830,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_While"
    },
    {
      "code": "dynamic",
      "line": 838,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_If"
    },
    {
      "code": "dynamic",
      "line": 846,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_With"
    },
    {
      "code": "dynamic",
      "line": 847,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_With"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AsyncWith"
    },
    {
      "code": "dynamic",
      "line": 856,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_AsyncWith"
    },
    {
      "code": "dynamic",
      "line": 864,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 864,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 872,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Try"
    },
    {
      "code": "dynamic",
      "line": 872,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Try"
    },
    {
      "code": "dynamic",
      "line": 877,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Try"
    },
    {
      "code": "dynamic",
      "line": 885,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Assert"
    },
    {
      "code": "dynamic",
      "line": 885,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Assert"
    },
    {
      "code": "dynamic",
      "line": 929,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Expr"
    },
    {
      "code": "dynamic",
      "line": 930,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Expr"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_NamedExpr"
    },
    {
      "code": "dynamic",
      "line": 959,
      "message": "Expression type contains \"Any\" (has type \"Type[And]\")",
      "target": "mypy.fastparse.ASTConverter.visit_BoolOp"
    },
    {
      "code": "dynamic",
      "line": 961,
      "message": "Expression type contains \"Any\" (has type \"Type[Or]\")",
      "target": "mypy.fastparse.ASTConverter.visit_BoolOp"
    },
    {
      "code": "dynamic",
      "line": 983,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_BinOp"
    },
    {
      "code": "dynamic",
      "line": 983,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_BinOp"
    },
    {
      "code": "dynamic",
      "line": 989,
      "message": "Expression type contains \"Any\" (has type \"Type[Invert]\")",
      "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression type contains \"Any\" (has type \"Type[Not]\")",
      "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 993,
      "message": "Expression type contains \"Any\" (has type \"Type[UAdd]\")",
      "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 995,
      "message": "Expression type contains \"Any\" (has type \"Type[USub]\")",
      "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 1001,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 1017,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_IfExp"
    },
    {
      "code": "dynamic",
      "line": 1018,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_IfExp"
    },
    {
      "code": "dynamic",
      "line": 1019,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_IfExp"
    },
    {
      "code": "dynamic",
      "line": 1045,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1045,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1046,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1046,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1049,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1050,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1051,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1052,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 1059,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1059,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1060,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1060,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1063,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1064,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1065,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 1072,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Await"
    },
    {
      "code": "dynamic",
      "line": 1073,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Await"
    },
    {
      "code": "dynamic",
      "line": 1078,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Yield"
    },
    {
      "code": "dynamic",
      "line": 1083,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_YieldFrom"
    },
    {
      "code": "dynamic",
      "line": 1100,
      "message": "Expression type contains \"Any\" (has type \"Type[Starred]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Call"
    },
    {
      "code": "dynamic",
      "line": 1102,
      "message": "Expression type contains \"Any\" (has type \"Type[Starred]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Call"
    },
    {
      "code": "dynamic",
      "line": 1104,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Call"
    },
    {
      "code": "dynamic",
      "line": 1107,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Call"
    },
    {
      "code": "dynamic",
      "line": 1111,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1112,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1113,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1114,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1116,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1117,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1118,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1119,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1120,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1122,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1124,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1126,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1131,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1132,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1132,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1187,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
    },
    {
      "code": "dynamic",
      "line": 1188,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
    },
    {
      "code": "dynamic",
      "line": 1191,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
    },
    {
      "code": "dynamic",
      "line": 1191,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
    },
    {
      "code": "dynamic",
      "line": 1196,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
    },
    {
      "code": "dynamic",
      "line": 1196,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_FormattedValue"
    },
    {
      "code": "dynamic",
      "line": 1208,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_NameConstant"
    },
    {
      "code": "dynamic",
      "line": 1208,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_NameConstant"
    },
    {
      "code": "dynamic",
      "line": 1219,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Attribute"
    },
    {
      "code": "dynamic",
      "line": 1231,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1231,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1236,
      "message": "Expression type contains \"Any\" (has type \"Type[Slice]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1236,
      "message": "Expression type contains \"Any\" (has type \"Type[Slice]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1237,
      "message": "Expression type contains \"Any\" (has type \"Type[ExtSlice]\")",
      "target": "mypy.fastparse.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1249,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Starred"
    },
    {
      "code": "dynamic",
      "line": 1259,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_List"
    },
    {
      "code": "dynamic",
      "line": 1260,
      "message": "Expression type contains \"Any\" (has type \"Type[Store]\")",
      "target": "mypy.fastparse.ASTConverter.visit_List"
    },
    {
      "code": "dynamic",
      "line": 1276,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Slice"
    },
    {
      "code": "dynamic",
      "line": 1277,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Slice"
    },
    {
      "code": "dynamic",
      "line": 1278,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Slice"
    },
    {
      "code": "dynamic",
      "line": 1283,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
    },
    {
      "code": "dynamic",
      "line": 1283,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
    },
    {
      "code": "dynamic",
      "line": 1283,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
    },
    {
      "code": "dynamic",
      "line": 1283,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_ExtSlice"
    },
    {
      "code": "no-any-return",
      "line": 1288,
      "message": "Returning Any from function declared to return \"Node\"",
      "target": "mypy.fastparse.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1288,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1288,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1288,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1288,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1288,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1290,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.ASTConverter.visit_Match"
    },
    {
      "code": "dynamic",
      "line": 1292,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Match"
    },
    {
      "code": "dynamic",
      "line": 1292,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Match"
    },
    {
      "code": "dynamic",
      "line": 1292,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Match"
    },
    {
      "code": "dynamic",
      "line": 1292,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.ASTConverter.visit_Match"
    },
    {
      "code": "dynamic",
      "line": 1337,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, int]\")",
      "target": "mypy.fastparse.TypeConverter.invalid_type"
    },
    {
      "code": "dynamic",
      "line": 1354,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse.TypeConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 1355,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse.TypeConverter.visit"
    },
    {
      "code": "no-any-return",
      "line": 1356,
      "message": "Returning Any from function declared to return \"Optional[ProperType]\"",
      "target": "mypy.fastparse.TypeConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 1356,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 1395,
      "message": "Expression type contains \"Any\" (has type \"Type[typed_ast.ast3.List]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Call"
    },
    {
      "code": "dynamic",
      "line": 1440,
      "message": "Expression type contains \"Any\" (has type \"Type[Str]\")",
      "target": "mypy.fastparse.TypeConverter._extract_argument_name"
    },
    {
      "code": "dynamic",
      "line": 1442,
      "message": "Expression type contains \"Any\" (has type \"Type[NameConstant]\")",
      "target": "mypy.fastparse.TypeConverter._extract_argument_name"
    },
    {
      "code": "dynamic",
      "line": 1442,
      "message": "Expression type contains \"Any\" (has type \"Type[NameConstant]\")",
      "target": "mypy.fastparse.TypeConverter._extract_argument_name"
    },
    {
      "code": "dynamic",
      "line": 1442,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter._extract_argument_name"
    },
    {
      "code": "dynamic",
      "line": 1442,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter._extract_argument_name"
    },
    {
      "code": "dynamic",
      "line": 1452,
      "message": "Expression type contains \"Any\" (has type \"Type[BitOr]\")",
      "target": "mypy.fastparse.TypeConverter.visit_BinOp"
    },
    {
      "code": "dynamic",
      "line": 1464,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_NameConstant"
    },
    {
      "code": "dynamic",
      "line": 1467,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_NameConstant"
    },
    {
      "code": "dynamic",
      "line": 1467,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_NameConstant"
    },
    {
      "code": "dynamic",
      "line": 1471,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1472,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1475,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1478,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1478,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1481,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1481,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1483,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1486,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1489,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1491,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1493,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Constant"
    },
    {
      "code": "dynamic",
      "line": 1502,
      "message": "Expression type contains \"Any\" (has type \"Type[USub]\")",
      "target": "mypy.fastparse.TypeConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 1526,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, int]\")",
      "target": "mypy.fastparse.TypeConverter.numeric_type"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1578,
      "message": "Expression type contains \"Any\" (has type \"Type[Index]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1579,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1580,
      "message": "Expression type contains \"Any\" (has type \"Type[Slice]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1582,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1582,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1582,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1584,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1584,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1584,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1584,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1584,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1584,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1586,
      "message": "Expression type contains \"Any\" (has type \"Type[ExtSlice]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1589,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1590,
      "message": "Expression type contains \"Any\" (has type \"Type[Index]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "no-error-code",
      "line": 1591,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 1592,
      "message": "Expression type contains \"Any\" (has type \"Type[Slice]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "no-error-code",
      "line": 1593,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 1597,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1597,
      "message": "Expression type contains \"Any\" (has type \"Type[typed_ast.ast3.Tuple]\")",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1602,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1602,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse.TypeConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1630,
      "message": "Expression type contains \"Any\" (has type \"Type[Load]\")",
      "target": "mypy.fastparse.TypeConverter.visit_List"
    },
    {
      "code": "dynamic",
      "line": 1635,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse.stringify_name"
    },
    {
      "code": "dynamic",
      "line": 1637,
      "message": "Expression type contains \"Any\" (has type \"Type[Attribute]\")",
      "target": "mypy.fastparse.stringify_name"
    }
  ],
  "mypy/fastparse2.py": [
    {
      "code": "dynamic",
      "line": 118,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.parse"
    },
    {
      "code": "dynamic",
      "line": 121,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.parse"
    },
    {
      "code": "no-any-return",
      "line": 132,
      "message": "Returning Any from function declared to return \"MypyFile\"",
      "target": "mypy.fastparse2.parse"
    },
    {
      "code": "dynamic",
      "line": 132,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.parse"
    },
    {
      "code": "dynamic",
      "line": 136,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse2.is_no_type_check_decorator"
    },
    {
      "code": "dynamic",
      "line": 138,
      "message": "Expression type contains \"Any\" (has type \"Type[Attribute]\")",
      "target": "mypy.fastparse2.is_no_type_check_decorator"
    },
    {
      "code": "dynamic",
      "line": 139,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse2.is_no_type_check_decorator"
    },
    {
      "code": "dynamic",
      "line": 175,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse2.ASTConverter.__init__"
    },
    {
      "code": "dynamic",
      "line": 183,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression type contains \"Any\" (has type \"Dict[type, Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression type contains \"Any\" (has type \"Optional[Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 188,
      "message": "Expression type contains \"Any\" (has type \"Optional[Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 191,
      "message": "Expression type contains \"Any\" (has type \"Dict[type, Callable[[Optional[AST]], Any]]\")",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 191,
      "message": "Expression type contains \"Any\" (has type \"Union[Callable[[Optional[AST]], Any], Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 192,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit"
    },
    {
      "code": "dynamic",
      "line": 202,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.translate_expr_list"
    },
    {
      "code": "dynamic",
      "line": 203,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.translate_expr_list"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[ClassDef], Type[FunctionDef]]\")",
      "target": "mypy.fastparse2.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[ClassDef], Type[FunctionDef]]\")",
      "target": "mypy.fastparse2.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"Type[ClassDef]\")",
      "target": "mypy.fastparse2.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"Type[ClassDef]\")",
      "target": "mypy.fastparse2.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionDef]\")",
      "target": "mypy.fastparse2.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionDef]\")",
      "target": "mypy.fastparse2.ASTConverter.get_lineno"
    },
    {
      "code": "dynamic",
      "line": 227,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.translate_stmt_list"
    },
    {
      "code": "dynamic",
      "line": 228,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.translate_stmt_list"
    },
    {
      "code": "dynamic",
      "line": 248,
      "message": "Expression type contains \"Any\" (has type \"Type[Add]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 248,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Add], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression type contains \"Any\" (has type \"Type[Sub]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Sub], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 250,
      "message": "Expression type contains \"Any\" (has type \"Type[Mult]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 250,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Mult], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 251,
      "message": "Expression type contains \"Any\" (has type \"Type[Div]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 251,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Div], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 252,
      "message": "Expression type contains \"Any\" (has type \"Type[Mod]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 252,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Mod], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 253,
      "message": "Expression type contains \"Any\" (has type \"Type[Pow]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 253,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Pow], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 254,
      "message": "Expression type contains \"Any\" (has type \"Type[LShift]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 254,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[LShift], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 255,
      "message": "Expression type contains \"Any\" (has type \"Type[RShift]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 255,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[RShift], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 256,
      "message": "Expression type contains \"Any\" (has type \"Type[BitOr]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 256,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BitOr], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 257,
      "message": "Expression type contains \"Any\" (has type \"Type[BitXor]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 257,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BitXor], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 258,
      "message": "Expression type contains \"Any\" (has type \"Type[BitAnd]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 258,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BitAnd], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 259,
      "message": "Expression type contains \"Any\" (has type \"Type[FloorDiv]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 259,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[FloorDiv], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 272,
      "message": "Expression type contains \"Any\" (has type \"Type[Gt]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 272,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Gt], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 273,
      "message": "Expression type contains \"Any\" (has type \"Type[Lt]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 273,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Lt], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 274,
      "message": "Expression type contains \"Any\" (has type \"Type[Eq]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 274,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Eq], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 275,
      "message": "Expression type contains \"Any\" (has type \"Type[GtE]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 275,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[GtE], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression type contains \"Any\" (has type \"Type[LtE]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[LtE], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 277,
      "message": "Expression type contains \"Any\" (has type \"Type[NotEq]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 277,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[NotEq], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 278,
      "message": "Expression type contains \"Any\" (has type \"Type[Is]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 278,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[Is], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Type[IsNot]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[IsNot], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 280,
      "message": "Expression type contains \"Any\" (has type \"Type[In]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 280,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[In], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"Type[NotIn]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[NotIn], str]\")",
      "target": "mypy.fastparse2"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Module"
    },
    {
      "code": "dynamic",
      "line": 390,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionType]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
    },
    {
      "code": "dynamic",
      "line": 393,
      "message": "Expression type contains \"Any\" (has type \"Type[Ellipsis]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
    },
    {
      "code": "dynamic",
      "line": 449,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_FunctionDef"
    },
    {
      "code": "dynamic",
      "line": 536,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse2.ASTConverter.extract_names"
    },
    {
      "code": "dynamic",
      "line": 538,
      "message": "Expression type contains \"Any\" (has type \"Type[typed_ast.ast27.Tuple]\")",
      "target": "mypy.fastparse2.ASTConverter.extract_names"
    },
    {
      "code": "dynamic",
      "line": 545,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse2.ASTConverter.convert_arg"
    },
    {
      "code": "dynamic",
      "line": 547,
      "message": "Expression type contains \"Any\" (has type \"Type[typed_ast.ast27.Tuple]\")",
      "target": "mypy.fastparse2.ASTConverter.convert_arg"
    },
    {
      "code": "dynamic",
      "line": 551,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.convert_arg"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fastparse2.ASTConverter.get_type"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.get_type"
    },
    {
      "code": "dynamic",
      "line": 568,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.get_type"
    },
    {
      "code": "dynamic",
      "line": 578,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse2.ASTConverter.stringify_name"
    },
    {
      "code": "dynamic",
      "line": 580,
      "message": "Expression type contains \"Any\" (has type \"Type[Attribute]\")",
      "target": "mypy.fastparse2.ASTConverter.stringify_name"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Return"
    },
    {
      "code": "dynamic",
      "line": 617,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Delete"
    },
    {
      "code": "dynamic",
      "line": 624,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Assign"
    },
    {
      "code": "dynamic",
      "line": 631,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_AugAssign"
    },
    {
      "code": "dynamic",
      "line": 632,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_AugAssign"
    },
    {
      "code": "dynamic",
      "line": 638,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_For"
    },
    {
      "code": "dynamic",
      "line": 639,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_For"
    },
    {
      "code": "dynamic",
      "line": 647,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_While"
    },
    {
      "code": "dynamic",
      "line": 654,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_If"
    },
    {
      "code": "dynamic",
      "line": 662,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_With"
    },
    {
      "code": "dynamic",
      "line": 663,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_With"
    },
    {
      "code": "dynamic",
      "line": 673,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 676,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 676,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 678,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 678,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 678,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 680,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_Raise"
    },
    {
      "code": "dynamic",
      "line": 689,
      "message": "Expression type contains \"Any\" (has type \"Type[TryExcept]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_TryFinally"
    },
    {
      "code": "dynamic",
      "line": 705,
      "message": "Expression type contains \"Any\" (has type \"Type[Name]\")",
      "target": "mypy.fastparse2.ASTConverter.try_handler"
    },
    {
      "code": "dynamic",
      "line": 711,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.try_handler"
    },
    {
      "code": "dynamic",
      "line": 711,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.try_handler"
    },
    {
      "code": "dynamic",
      "line": 716,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.try_handler"
    },
    {
      "code": "dynamic",
      "line": 722,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Print"
    },
    {
      "code": "dynamic",
      "line": 726,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Exec"
    },
    {
      "code": "dynamic",
      "line": 727,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Exec"
    },
    {
      "code": "dynamic",
      "line": 728,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Exec"
    },
    {
      "code": "dynamic",
      "line": 732,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Repr"
    },
    {
      "code": "dynamic",
      "line": 737,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Assert"
    },
    {
      "code": "dynamic",
      "line": 737,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Assert"
    },
    {
      "code": "dynamic",
      "line": 779,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Expr"
    },
    {
      "code": "dynamic",
      "line": 780,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Expr"
    },
    {
      "code": "dynamic",
      "line": 804,
      "message": "Expression type contains \"Any\" (has type \"Type[And]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_BoolOp"
    },
    {
      "code": "dynamic",
      "line": 806,
      "message": "Expression type contains \"Any\" (has type \"Type[Or]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_BoolOp"
    },
    {
      "code": "dynamic",
      "line": 828,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_BinOp"
    },
    {
      "code": "dynamic",
      "line": 828,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_BinOp"
    },
    {
      "code": "dynamic",
      "line": 834,
      "message": "Expression type contains \"Any\" (has type \"Type[Invert]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 836,
      "message": "Expression type contains \"Any\" (has type \"Type[Not]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 838,
      "message": "Expression type contains \"Any\" (has type \"Type[UAdd]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 840,
      "message": "Expression type contains \"Any\" (has type \"Type[USub]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 846,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_UnaryOp"
    },
    {
      "code": "dynamic",
      "line": 866,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_IfExp"
    },
    {
      "code": "dynamic",
      "line": 867,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_IfExp"
    },
    {
      "code": "dynamic",
      "line": 868,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_IfExp"
    },
    {
      "code": "dynamic",
      "line": 894,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 894,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 895,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 895,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 897,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 898,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 899,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 900,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_DictComp"
    },
    {
      "code": "dynamic",
      "line": 907,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 907,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 908,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 908,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 910,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 911,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 912,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_GeneratorExp"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Yield"
    },
    {
      "code": "dynamic",
      "line": 956,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Call"
    },
    {
      "code": "dynamic",
      "line": 1016,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Attribute"
    },
    {
      "code": "dynamic",
      "line": 1028,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1028,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Subscript"
    },
    {
      "code": "dynamic",
      "line": 1043,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_List"
    },
    {
      "code": "dynamic",
      "line": 1044,
      "message": "Expression type contains \"Any\" (has type \"Type[Store]\")",
      "target": "mypy.fastparse2.ASTConverter.visit_List"
    },
    {
      "code": "dynamic",
      "line": 1053,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Tuple"
    },
    {
      "code": "dynamic",
      "line": 1060,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Slice"
    },
    {
      "code": "dynamic",
      "line": 1061,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Slice"
    },
    {
      "code": "dynamic",
      "line": 1062,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Slice"
    },
    {
      "code": "no-any-return",
      "line": 1070,
      "message": "Returning Any from function declared to return \"Expression\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Index"
    },
    {
      "code": "dynamic",
      "line": 1070,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fastparse2.ASTConverter.visit_Index"
    }
  ],
  "mypy/find_sources.py": [
    {
      "code": "dynamic",
      "line": 163,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]\")",
      "target": "mypy.find_sources"
    }
  ],
  "mypy/fixup.py": [
    {
      "code": "dynamic",
      "line": 177,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_any"
    },
    {
      "code": "dynamic",
      "line": 205,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_erased_type"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fixup.TypeFixer.visit_erased_type"
    },
    {
      "code": "dynamic",
      "line": 209,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_deleted_type"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_none_type"
    },
    {
      "code": "dynamic",
      "line": 215,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_uninhabited_type"
    },
    {
      "code": "dynamic",
      "line": 218,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_partial_type"
    },
    {
      "code": "dynamic",
      "line": 219,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fixup.TypeFixer.visit_partial_type"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.fixup.TypeFixer.visit_void"
    }
  ],
  "mypy/fscache.py": [
    {
      "code": "dynamic",
      "line": 149,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.fscache.FileSystemCache._fake_init"
    },
    {
      "code": "dynamic",
      "line": 149,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.fscache.FileSystemCache._fake_init"
    },
    {
      "code": "dynamic",
      "line": 155,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.fscache.FileSystemCache._fake_init"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.fscache.copy_os_error"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.fscache.copy_os_error"
    },
    {
      "code": "dynamic",
      "line": 306,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fscache.copy_os_error"
    },
    {
      "code": "dynamic",
      "line": 307,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fscache.copy_os_error"
    },
    {
      "code": "dynamic",
      "line": 308,
      "message": "Expression has type \"Any\"",
      "target": "mypy.fscache.copy_os_error"
    }
  ],
  "mypy/gclogger.py": [
    {
      "code": "dynamic",
      "line": 16,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.gclogger.GcLogger.__enter__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.gclogger.GcLogger.__exit__"
    },
    {
      "code": "dynamic",
      "line": 36,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.gclogger.GcLogger.__exit__"
    }
  ],
  "mypy/join.py": [
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.join.TypeJoinVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.join.TypeJoinVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 566,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[TypedDictType], Type[LiteralType]]\")",
      "target": "mypy.join.object_or_any_from_type"
    },
    {
      "code": "dynamic",
      "line": 566,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.join.object_or_any_from_type"
    }
  ],
  "mypy/literals.py": [
    {
      "code": "dynamic",
      "line": 85,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.literals"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 132,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 132,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 132,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "no-any-return",
      "line": 133,
      "message": "Returning Any from function declared to return \"Tuple[Any, ...]\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 133,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 133,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 133,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_comparison_expr"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "no-any-return",
      "line": 141,
      "message": "Returning Any from function declared to return \"Optional[Tuple[Any, ...]]\"",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "dynamic",
      "line": 141,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "dynamic",
      "line": 141,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "dynamic",
      "line": 141,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.seq_expr"
    },
    {
      "code": "dynamic",
      "line": 149,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    },
    {
      "code": "dynamic",
      "line": 149,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    },
    {
      "code": "dynamic",
      "line": 149,
      "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    },
    {
      "code": "no-any-return",
      "line": 152,
      "message": "Returning Any from function declared to return \"Optional[Tuple[Any, ...]]\"",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    },
    {
      "code": "dynamic",
      "line": 152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    },
    {
      "code": "dynamic",
      "line": 152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    },
    {
      "code": "dynamic",
      "line": 152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.literals._Hasher.visit_dict_expr"
    }
  ],
  "mypy/main.py": [
    {
      "code": "dynamic",
      "line": 307,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.infer_python_executable"
    },
    {
      "code": "dynamic",
      "line": 307,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.infer_python_executable"
    },
    {
      "code": "dynamic",
      "line": 307,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str, None]\")",
      "target": "mypy.main.infer_python_executable"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str, None]\")",
      "target": "mypy.main.infer_python_executable"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.infer_python_executable"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.infer_python_executable"
    },
    {
      "code": "dynamic",
      "line": 359,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 360,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 360,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.main.CapturableArgumentParser.__init__"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression type contains \"Any\" (has type \"Union[IO[str], Any]\")",
      "target": "mypy.main.CapturableArgumentParser.print_usage"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression type contains \"Any\" (has type \"Union[IO[str], Any]\")",
      "target": "mypy.main.CapturableArgumentParser.print_help"
    },
    {
      "code": "dynamic",
      "line": 381,
      "message": "Expression type contains \"Any\" (has type \"Union[IO[str], Any]\")",
      "target": "mypy.main.CapturableArgumentParser._print_message"
    },
    {
      "code": "dynamic",
      "line": 388,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.CapturableArgumentParser.exit"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.CapturableArgumentParser.error"
    },
    {
      "code": "dynamic",
      "line": 433,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.main.CapturableVersionAction.__call__"
    },
    {
      "code": "dynamic",
      "line": 598,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 601,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 719,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 722,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 887,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 909,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 923,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 938,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 941,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 941,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 941,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 941,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 942,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 944,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 960,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 974,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 974,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 980,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 980,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 980,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 985,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 992,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 992,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 992,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 992,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1024,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1030,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1031,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1039,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1039,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1039,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1039,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1039,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1040,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1042,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1043,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1050,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1066,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1076,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1076,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1077,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1077,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1077,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1078,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1080,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1082,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1084,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1084,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1085,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1087,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1089,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1093,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_options"
    },
    {
      "code": "dynamic",
      "line": 1141,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1145,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1145,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1145,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1145,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1145,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1146,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1146,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1147,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1149,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1150,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1150,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1153,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1153,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1155,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1156,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1156,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1156,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    },
    {
      "code": "dynamic",
      "line": 1156,
      "message": "Expression has type \"Any\"",
      "target": "mypy.main.process_cache_map"
    }
  ],
  "mypy/meet.py": [
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.is_overlapping_types"
    },
    {
      "code": "dynamic",
      "line": 557,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.TypeMeetVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 557,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.TypeMeetVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 660,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.meet.TypeMeetVisitor.visit_type_type"
    }
  ],
  "mypy/memprofile.py": [
    {
      "code": "dynamic",
      "line": 25,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 29,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 29,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 33,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 33,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 33,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 34,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 36,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 36,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 36,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 36,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "no-error-code",
      "line": 37,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression type contains \"Any\" (has type \"dict_values[str, Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 40,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 43,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 48,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 51,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.collect_memory_stats"
    },
    {
      "code": "dynamic",
      "line": 80,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.memprofile.print_memory_profile"
    },
    {
      "code": "dynamic",
      "line": 80,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.print_memory_profile"
    },
    {
      "code": "dynamic",
      "line": 80,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.print_memory_profile"
    },
    {
      "code": "dynamic",
      "line": 116,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.memprofile.find_recursive_objects"
    },
    {
      "code": "dynamic",
      "line": 117,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.find_recursive_objects"
    },
    {
      "code": "dynamic",
      "line": 117,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Tuple[]]\")",
      "target": "mypy.memprofile.find_recursive_objects"
    },
    {
      "code": "dynamic",
      "line": 118,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.find_recursive_objects"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.find_recursive_objects"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.find_recursive_objects"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression has type \"Any\"",
      "target": "mypy.memprofile.find_recursive_objects"
    }
  ],
  "mypy/messages.py": [
    {
      "code": "dynamic",
      "line": 283,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.has_no_attr"
    },
    {
      "code": "dynamic",
      "line": 283,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.has_no_attr"
    },
    {
      "code": "dynamic",
      "line": 368,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
    },
    {
      "code": "dynamic",
      "line": 380,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
    },
    {
      "code": "dynamic",
      "line": 383,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
    },
    {
      "code": "dynamic",
      "line": 386,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.unsupported_operand_types"
    },
    {
      "code": "dynamic",
      "line": 619,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.incompatible_argument_note"
    },
    {
      "code": "dynamic",
      "line": 619,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.incompatible_argument_note"
    },
    {
      "code": "dynamic",
      "line": 684,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 684,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 685,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 685,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 685,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, None, bool]\")",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 685,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 685,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.maybe_note_about_special_args"
    },
    {
      "code": "dynamic",
      "line": 844,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
    },
    {
      "code": "dynamic",
      "line": 844,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
    },
    {
      "code": "dynamic",
      "line": 844,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
    },
    {
      "code": "dynamic",
      "line": 844,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
    },
    {
      "code": "dynamic",
      "line": 845,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
    },
    {
      "code": "dynamic",
      "line": 845,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.signature_incompatible_with_supertype"
    },
    {
      "code": "dynamic",
      "line": 864,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.pretty_callable_or_overload"
    },
    {
      "code": "dynamic",
      "line": 1175,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.messages.MessageBuilder.reveal_locals"
    },
    {
      "code": "dynamic",
      "line": 1175,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypy.messages.MessageBuilder.reveal_locals"
    },
    {
      "code": "dynamic",
      "line": 1175,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.MessageBuilder.reveal_locals"
    },
    {
      "code": "unreachable",
      "line": 1455,
      "message": "Statement is unreachable",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "unreachable",
      "line": 1459,
      "message": "Statement is unreachable",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1487,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1487,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1487,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1487,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1488,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1488,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1496,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1502,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.MessageBuilder.report_protocol_problems"
    },
    {
      "code": "dynamic",
      "line": 1553,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.messages.MessageBuilder.print_more"
    },
    {
      "code": "dynamic",
      "line": 1560,
      "message": "Expression type contains \"Any\" (has type \"Sequence[Any]\")",
      "target": "mypy.messages.MessageBuilder.print_more"
    },
    {
      "code": "dynamic",
      "line": 1562,
      "message": "Expression type contains \"Any\" (has type \"Sequence[Any]\")",
      "target": "mypy.messages.MessageBuilder.print_more"
    },
    {
      "code": "dynamic",
      "line": 1764,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.messages.format_type_inner"
    },
    {
      "code": "dynamic",
      "line": 1950,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.messages.pretty_callable"
    },
    {
      "code": "dynamic",
      "line": 1950,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.messages.pretty_callable"
    },
    {
      "code": "dynamic",
      "line": 1951,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.messages.pretty_callable"
    },
    {
      "code": "dynamic",
      "line": 1954,
      "message": "Expression has type \"Any\"",
      "target": "mypy.messages.pretty_callable"
    },
    {
      "code": "dynamic",
      "line": 2076,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.messages.plural_s"
    },
    {
      "code": "dynamic",
      "line": 2077,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Sequence[Any]]\")",
      "target": "mypy.messages.plural_s"
    },
    {
      "code": "dynamic",
      "line": 2077,
      "message": "Expression type contains \"Any\" (has type \"Sequence[Any]\")",
      "target": "mypy.messages.plural_s"
    },
    {
      "code": "dynamic",
      "line": 2077,
      "message": "Expression type contains \"Any\" (has type \"Sequence[Any]\")",
      "target": "mypy.messages.plural_s"
    },
    {
      "code": "dynamic",
      "line": 2141,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[float, Any]]\")",
      "target": "mypy.messages.best_matches"
    }
  ],
  "mypy/metastore.py": [
    {
      "code": "dynamic",
      "line": 177,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "dynamic",
      "line": 183,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "dynamic",
      "line": 186,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "dynamic",
      "line": 187,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore._query"
    },
    {
      "code": "no-any-return",
      "line": 190,
      "message": "Returning Any from function declared to return \"float\"",
      "target": "mypy.metastore.SqliteMetadataStore.getmtime"
    },
    {
      "code": "dynamic",
      "line": 190,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore.getmtime"
    },
    {
      "code": "no-any-return",
      "line": 193,
      "message": "Returning Any from function declared to return \"str\"",
      "target": "mypy.metastore.SqliteMetadataStore.read"
    },
    {
      "code": "dynamic",
      "line": 193,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore.read"
    },
    {
      "code": "dynamic",
      "line": 221,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore.list_all"
    },
    {
      "code": "dynamic",
      "line": 222,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore.list_all"
    },
    {
      "code": "dynamic",
      "line": 222,
      "message": "Expression has type \"Any\"",
      "target": "mypy.metastore.SqliteMetadataStore.list_all"
    }
  ],
  "mypy/modulefinder.py": [
    {
      "code": "dynamic",
      "line": 455,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
    },
    {
      "code": "dynamic",
      "line": 457,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
    },
    {
      "code": "dynamic",
      "line": 457,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, object]\")",
      "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
    },
    {
      "code": "dynamic",
      "line": 459,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
    },
    {
      "code": "dynamic",
      "line": 459,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, object]\")",
      "target": "mypy.modulefinder.FindModuleCache._is_compatible_stub_package"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]\")",
      "target": "mypy.modulefinder"
    },
    {
      "code": "no-any-return",
      "line": 623,
      "message": "Returning Any from function declared to return \"Tuple[str, str]\"",
      "target": "mypy.modulefinder.get_prefixes"
    },
    {
      "code": "dynamic",
      "line": 623,
      "message": "Expression has type \"Any\"",
      "target": "mypy.modulefinder.get_prefixes"
    },
    {
      "code": "dynamic",
      "line": 628,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., _T]], _lru_cache_wrapper[_T]]\")",
      "target": "mypy.modulefinder"
    }
  ],
  "mypy/moduleinspect.py": [
    {
      "code": "dynamic",
      "line": 31,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 31,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.is_c_module"
    },
    {
      "code": "dynamic",
      "line": 48,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 68,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 78,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 79,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.moduleinspect.get_package_properties"
    },
    {
      "code": "dynamic",
      "line": 81,
      "message": "Expression has type \"Any\"",
      "target": "mypy.moduleinspect.get_package_properties"
    }
  ],
  "mypy/nodes.py": [
    {
      "code": "dynamic",
      "line": 67,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.nodes"
    },
    {
      "code": "unreachable",
      "line": 177,
      "message": "Statement is unreachable",
      "target": "mypy.nodes.Node.__str__"
    },
    {
      "code": "dynamic",
      "line": 184,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.MypyFile.serialize"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.MypyFile.deserialize"
    },
    {
      "code": "dynamic",
      "line": 564,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.OverloadedFuncDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.nodes.OverloadedFuncDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.nodes.OverloadedFuncDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 574,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.OverloadedFuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 575,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.OverloadedFuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 576,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.OverloadedFuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 736,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.FuncDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 740,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.nodes.FuncDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 740,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.nodes.FuncDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 748,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 748,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 760,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 760,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 760,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 760,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FuncDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 822,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.Decorator.serialize"
    },
    {
      "code": "dynamic",
      "line": 830,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.Decorator.deserialize"
    },
    {
      "code": "dynamic",
      "line": 950,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.Var.deserialize"
    },
    {
      "code": "no-error-code",
      "line": 992,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 1013,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.ClassDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 1016,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.nodes.ClassDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 1016,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.nodes.ClassDef.serialize"
    },
    {
      "code": "dynamic",
      "line": 1021,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.ClassDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1024,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.ClassDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1024,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.ClassDef.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2235,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.TypeVarExpr.serialize"
    },
    {
      "code": "dynamic",
      "line": 2238,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.nodes.TypeVarExpr.serialize"
    },
    {
      "code": "dynamic",
      "line": 2238,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.nodes.TypeVarExpr.serialize"
    },
    {
      "code": "dynamic",
      "line": 2245,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.TypeVarExpr.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2248,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.TypeVarExpr.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2248,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.TypeVarExpr.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2260,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes.ParamSpecExpr.serialize"
    },
    {
      "code": "dynamic",
      "line": 2270,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.ParamSpecExpr.deserialize"
    },
    {
      "code": "unreachable",
      "line": 2697,
      "message": "Statement is unreachable",
      "target": "mypy.nodes.TypeInfo.get_method"
    },
    {
      "code": "dynamic",
      "line": 2822,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.TypeInfo.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2822,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.TypeInfo.deserialize"
    },
    {
      "code": "no-any-return",
      "line": 2879,
      "message": "Returning Any from function declared to return \"None\"",
      "target": "mypy.nodes.FakeInfo.__getattribute__"
    },
    {
      "code": "dynamic",
      "line": 2879,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FakeInfo.__getattribute__"
    },
    {
      "code": "dynamic",
      "line": 2880,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.FakeInfo.__getattribute__"
    },
    {
      "code": "dynamic",
      "line": 3025,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.TypeAlias.deserialize"
    },
    {
      "code": "dynamic",
      "line": 3272,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.SymbolTableNode.deserialize"
    },
    {
      "code": "unreachable",
      "line": 3311,
      "message": "Statement is unreachable",
      "target": "mypy.nodes.SymbolTable.__str__"
    },
    {
      "code": "dynamic",
      "line": 3335,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.SymbolTable.deserialize"
    },
    {
      "code": "dynamic",
      "line": 3344,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes.get_flags"
    },
    {
      "code": "dynamic",
      "line": 3368,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3368,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3368,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3370,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3370,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3371,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3371,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3371,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3371,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3371,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3371,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3372,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3372,
      "message": "Expression has type \"Any\"",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3372,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.nodes"
    },
    {
      "code": "dynamic",
      "line": 3372,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.nodes"
    }
  ],
  "mypy/options.py": [
    {
      "code": "attr-defined",
      "line": 13,
      "message": "Module \"mypy.errors\" does not explicitly export attribute \"ErrorCode\"; implicit reexport disabled",
      "target": "mypy.options"
    },
    {
      "code": "no-any-unimported",
      "line": 219,
      "message": "Type of variable becomes \"Set[Any]\" due to an unfollowed import",
      "target": "mypy.options.Options.__init__"
    },
    {
      "code": "no-any-unimported",
      "line": 223,
      "message": "Type of variable becomes \"Set[Any]\" due to an unfollowed import",
      "target": "mypy.options.Options.__init__"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.options.Options.__init__"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Tuple[]]\")",
      "target": "mypy.options.Options.snapshot"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression has type \"Any\"",
      "target": "mypy.options.Options.snapshot"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression has type \"Any\"",
      "target": "mypy.options.Options.snapshot"
    },
    {
      "code": "dynamic",
      "line": 456,
      "message": "Expression has type \"Any\"",
      "target": "mypy.options.Options.select_options_affecting_cache"
    }
  ],
  "mypy/parse.py": [
    {
      "code": "dynamic",
      "line": 21,
      "message": "Expression type contains \"Any\" (has type \"Optional[Callable[[Any], Any]]\")",
      "target": "mypy.parse.parse"
    }
  ],
  "mypy/plugin.py": [
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.plugin"
    },
    {
      "code": "dynamic",
      "line": 207,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.plugin"
    },
    {
      "code": "dynamic",
      "line": 238,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.plugin"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.plugin.SemanticAnalyzerPluginInterface.add_symbol_table_node"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[SemanticAnalyzerPluginInterface, str, SymbolTableNode], Any]\")",
      "target": "mypy.plugin"
    },
    {
      "code": "dynamic",
      "line": 513,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.plugin.Plugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 762,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression type contains \"Any\" (has type \"Optional[List[Any]]\")",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.plugin.ChainedPlugin.report_config_data"
    }
  ],
  "mypy/plugins/attrs.py": [
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.attrs.Attribute.argument"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.attrs.Attribute.argument"
    },
    {
      "code": "dynamic",
      "line": 165,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.plugins.attrs.Attribute.serialize"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.plugins.attrs.attr_class_maker_callback"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.plugins.attrs.attr_class_maker_callback"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.plugins.attrs.attr_class_maker_callback"
    },
    {
      "code": "dynamic",
      "line": 383,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.attrs._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 386,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.attrs._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 386,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.attrs._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 386,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.attrs._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 386,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.attrs._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 387,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.attrs._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 702,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.plugins.attrs._add_init"
    },
    {
      "code": "dynamic",
      "line": 702,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.plugins.attrs._add_init"
    }
  ],
  "mypy/plugins/common.py": [
    {
      "code": "attr-defined",
      "line": 8,
      "message": "Module \"mypy.semanal\" does not explicitly export attribute \"set_callable_name\"; implicit reexport disabled",
      "target": "mypy.plugins.common"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.common._get_argument"
    }
  ],
  "mypy/plugins/dataclasses.py": [
    {
      "code": "dynamic",
      "line": 79,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.plugins.dataclasses.DataclassAttribute.serialize"
    },
    {
      "code": "dynamic",
      "line": 205,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.transform"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.transform"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.transform"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
    },
    {
      "code": "dynamic",
      "line": 389,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.dataclasses.DataclassTransformer.collect_attributes"
    },
    {
      "code": "dynamic",
      "line": 450,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.dataclasses.DataclassTransformer._propertize_callables"
    }
  ],
  "mypy/plugins/default.py": [
    {
      "code": "attr-defined",
      "line": 10,
      "message": "Module \"mypy.plugins.common\" does not explicitly export attribute \"try_getting_str_literals\"; implicit reexport disabled",
      "target": "mypy.plugins.default"
    },
    {
      "code": "attr-defined",
      "line": 17,
      "message": "Module \"mypy.checkexpr\" does not explicitly export attribute \"is_literal_type_like\"; implicit reexport disabled",
      "target": "mypy.plugins.default"
    },
    {
      "code": "no-error-code",
      "line": 176,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 190,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.default.contextmanager_callback"
    },
    {
      "code": "dynamic",
      "line": 190,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.default.contextmanager_callback"
    },
    {
      "code": "dynamic",
      "line": 191,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.default.contextmanager_callback"
    },
    {
      "code": "dynamic",
      "line": 244,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_get_callback"
    },
    {
      "code": "dynamic",
      "line": 245,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_get_callback"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_get_callback"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_get_callback"
    },
    {
      "code": "dynamic",
      "line": 250,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_get_callback"
    },
    {
      "code": "dynamic",
      "line": 250,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_get_callback"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 315,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 315,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 316,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 316,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 317,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 319,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 319,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_pop_callback"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 362,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 369,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 369,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_setdefault_callback"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 397,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 401,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 403,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 405,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.typed_dict_delitem_callback"
    },
    {
      "code": "dynamic",
      "line": 453,
      "message": "Expression has type \"Any\"",
      "target": "mypy.plugins.default.int_neg_callback"
    },
    {
      "code": "unreachable",
      "line": 483,
      "message": "Subclass of \"TupleType\" and \"LiteralType\" cannot exist: would have incompatible method signatures",
      "target": "mypy.plugins.default.tuple_mul_callback"
    },
    {
      "code": "unreachable",
      "line": 484,
      "message": "Statement is unreachable",
      "target": "mypy.plugins.default.tuple_mul_callback"
    }
  ],
  "mypy/plugins/enums.py": [
    {
      "code": "dynamic",
      "line": 97,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.enums._infer_value_type_with_auto_fallback"
    },
    {
      "code": "dynamic",
      "line": 171,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.enums.enum_value_callback"
    },
    {
      "code": "dynamic",
      "line": 171,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.enums.enum_value_callback"
    }
  ],
  "mypy/plugins/functools.py": [
    {
      "code": "dynamic",
      "line": 41,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[bool, Any]]\")",
      "target": "mypy.plugins.functools.functools_total_ordering_maker_callback"
    },
    {
      "code": "unreachable",
      "line": 94,
      "message": "Right operand of \"and\" is never evaluated",
      "target": "mypy.plugins.functools._analyze_class"
    },
    {
      "code": "unreachable",
      "line": 95,
      "message": "Statement is unreachable",
      "target": "mypy.plugins.functools._analyze_class"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.functools._analyze_class"
    }
  ],
  "mypy/plugins/singledispatch.py": [
    {
      "code": "no-error-code",
      "line": 34,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 93,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.singledispatch.create_singledispatch_function_callback"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[CallableType], Type[Overloaded]]\")",
      "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
    },
    {
      "code": "dynamic",
      "line": 125,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
    },
    {
      "code": "dynamic",
      "line": 141,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.singledispatch.singledispatch_register_callback"
    },
    {
      "code": "dynamic",
      "line": 159,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.plugins.singledispatch.register_function"
    },
    {
      "code": "no-error-code",
      "line": 195,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    }
  ],
  "mypy/report.py": [
    {
      "code": "no-error-code",
      "line": 28,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.report.AnyExpressionsReporter._report_any_exprs"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.AnyExpressionsReporter._report_any_exprs"
    },
    {
      "code": "dynamic",
      "line": 282,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.report.AnyExpressionsReporter._report_types_of_anys"
    },
    {
      "code": "dynamic",
      "line": 282,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.AnyExpressionsReporter._report_types_of_anys"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.report.LineCoverageReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 448,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 448,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 448,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 448,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 449,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.report.MemoryXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 479,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 479,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 486,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 486,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 493,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 493,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 495,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 495,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 496,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 496,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 519,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 519,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 520,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 520,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 520,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 523,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 523,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 529,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 529,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 531,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 531,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 532,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 532,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.MemoryXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 552,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.report.CoberturaPackage.__init__"
    },
    {
      "code": "dynamic",
      "line": 557,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 558,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 558,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 561,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 561,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 562,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 562,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 563,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 563,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 563,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 564,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 564,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 566,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 567,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.as_xml"
    },
    {
      "code": "dynamic",
      "line": 569,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 571,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 571,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 571,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 572,
      "message": "Expression type contains \"Any\" (has type \"attrgetter[Any]\")",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 572,
      "message": "Expression type contains \"Any\" (has type \"attrgetter[Any]\")",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 572,
      "message": "Expression type contains \"Any\" (has type \"attrgetter[Any]\")",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 573,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 573,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaPackage.add_packages"
    },
    {
      "code": "dynamic",
      "line": 582,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 582,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 585,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 585,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 585,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 603,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 603,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 608,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 608,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 608,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 626,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 626,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 626,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 632,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 632,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 633,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 633,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 634,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 634,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 650,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 650,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 653,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 653,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 655,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 655,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 656,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 656,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 656,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 657,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 657,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 657,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 658,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 658,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 658,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 659,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 661,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.CoberturaXmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 694,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 702,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 705,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 706,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 710,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 729,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 729,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 729,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 729,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 730,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 730,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 730,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 737,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 738,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 745,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 745,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 745,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 745,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 745,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 745,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_file"
    },
    {
      "code": "dynamic",
      "line": 750,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 751,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltHtmlReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 773,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 773,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 773,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 773,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.__init__"
    },
    {
      "code": "dynamic",
      "line": 783,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XsltTxtReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 784,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.report.XsltTxtReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 786,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 786,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 786,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 786,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.XsltTxtReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 849,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.report.LinePrecisionReporter.on_finish"
    },
    {
      "code": "dynamic",
      "line": 849,
      "message": "Expression has type \"Any\"",
      "target": "mypy.report.LinePrecisionReporter.on_finish"
    }
  ],
  "mypy/sametypes.py": [
    {
      "code": "dynamic",
      "line": 107,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.sametypes.SameTypeVisitor.visit_callable_type"
    }
  ],
  "mypy/semanal.py": [
    {
      "code": "dynamic",
      "line": 629,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 629,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 638,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 638,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 647,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 662,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 668,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 668,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_func_def"
    },
    {
      "code": "dynamic",
      "line": 692,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.prepare_method_signature"
    },
    {
      "code": "dynamic",
      "line": 766,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 823,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.analyze_overload_sigs_and_impl"
    },
    {
      "code": "dynamic",
      "line": 1004,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.check_classvar_in_signature"
    },
    {
      "code": "dynamic",
      "line": 1014,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.check_function_signature"
    },
    {
      "code": "dynamic",
      "line": 1340,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.semanal.SemanticAnalyzer.clean_up_bases_and_infer_type_variables"
    },
    {
      "code": "dynamic",
      "line": 1962,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.semanal.SemanticAnalyzer.report_missing_module_attribute"
    },
    {
      "code": "unreachable",
      "line": 2028,
      "message": "Statement is unreachable",
      "target": "mypy.semanal.SemanticAnalyzer.visit_import_all"
    },
    {
      "code": "dynamic",
      "line": 3450,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Any, ...]]\")",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3451,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3451,
      "message": "Expression has type \"Any\"",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3451,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3451,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Any, ...]]\")",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3452,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3452,
      "message": "Expression has type \"Any\"",
      "target": "mypy.semanal.SemanticAnalyzer.process_module_assignment"
    },
    {
      "code": "dynamic",
      "line": 3895,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.semanal.SemanticAnalyzer.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 3895,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.semanal.SemanticAnalyzer.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 3895,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.semanal.SemanticAnalyzer.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 4018,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.visit_member_expr"
    },
    {
      "code": "dynamic",
      "line": 4498,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.SemanticAnalyzer.create_getattr_var"
    },
    {
      "code": "no-error-code",
      "line": 4559,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 5307,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal.replace_implicit_first_type"
    },
    {
      "code": "dynamic",
      "line": 5384,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.semanal.apply_semantic_analyzer_patches"
    },
    {
      "code": "dynamic",
      "line": 5384,
      "message": "Expression has type \"Any\"",
      "target": "mypy.semanal.apply_semantic_analyzer_patches"
    }
  ],
  "mypy/semanal_infer.py": [
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.infer_decorator_signature_if_simple"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.is_identity_signature"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.is_identity_signature"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.calculate_return_type"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.find_fixed_callable_return"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.find_fixed_callable_return"
    },
    {
      "code": "dynamic",
      "line": 112,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.find_fixed_callable_return"
    },
    {
      "code": "dynamic",
      "line": 118,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.semanal_infer.find_fixed_callable_return"
    }
  ],
  "mypy/semanal_main.py": [
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[Any, Any]]\")",
      "target": "mypy.semanal_main.process_functions"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypy.semanal_main.process_functions"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression has type \"Any\"",
      "target": "mypy.semanal_main.process_functions"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression has type \"Any\"",
      "target": "mypy.semanal_main.process_functions"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression has type \"Any\"",
      "target": "mypy.semanal_main.process_functions"
    }
  ],
  "mypy/semanal_namedtuple.py": [
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.semanal_namedtuple.NamedTupleAnalyzer.build_namedtuple_typeinfo"
    }
  ],
  "mypy/semanal_shared.py": [
    {
      "code": "dynamic",
      "line": 27,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.semanal_shared"
    },
    {
      "code": "dynamic",
      "line": 86,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.semanal_shared"
    }
  ],
  "mypy/server/astdiff.py": [
    {
      "code": "unreachable",
      "line": 177,
      "message": "Statement is unreachable",
      "target": "mypy.server.astdiff.snapshot_definition"
    }
  ],
  "mypy/server/astmerge.py": [
    {
      "code": "unreachable",
      "line": 236,
      "message": "Statement is unreachable",
      "target": "mypy.server.astmerge.NodeReplaceVisitor.visit_call_expr"
    }
  ],
  "mypy/server/aststrip.py": [
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.server.aststrip.NodeStripVisitor.visit_func_def"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.server.aststrip.NodeStripVisitor.visit_func_def"
    }
  ],
  "mypy/server/deps.py": [
    {
      "code": "attr-defined",
      "line": 85,
      "message": "Module \"mypy.checkmember\" does not explicitly export attribute \"bind_self\"; implicit reexport disabled",
      "target": "mypy.server.deps"
    },
    {
      "code": "unreachable",
      "line": 421,
      "message": "Statement is unreachable",
      "target": "mypy.server.deps.DependencyVisitor.visit_assignment_stmt"
    },
    {
      "code": "dynamic",
      "line": 1019,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.server.deps.dump_all_dependencies"
    },
    {
      "code": "dynamic",
      "line": 1019,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.deps.dump_all_dependencies"
    }
  ],
  "mypy/server/mergecheck.py": [
    {
      "code": "unreachable",
      "line": 31,
      "message": "Statement is unreachable",
      "target": "mypy.server.mergecheck.check_consistency"
    }
  ],
  "mypy/server/objgraph.py": [
    {
      "code": "dynamic",
      "line": 14,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BuiltinFunctionType], Type[FunctionType], Type[MethodType], Type[Callable[[object], Iterable[str]]], Type[Callable[[object, object], bool]], Type[Callable[[object], bool]]]\")",
      "target": "mypy.server.objgraph"
    },
    {
      "code": "dynamic",
      "line": 16,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionType]\")",
      "target": "mypy.server.objgraph"
    },
    {
      "code": "dynamic",
      "line": 17,
      "message": "Expression type contains \"Any\" (has type \"Type[MethodType]\")",
      "target": "mypy.server.objgraph"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Set[Type[ReferenceType[Any]]]\")",
      "target": "mypy.server.objgraph"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"Type[ReferenceType[Any]]\")",
      "target": "mypy.server.objgraph"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"Type[ReferenceType[Any]]\")",
      "target": "mypy.server.objgraph"
    },
    {
      "code": "dynamic",
      "line": 55,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.server.objgraph.isproperty"
    },
    {
      "code": "dynamic",
      "line": 55,
      "message": "Expression type contains \"Any\" (has type \"Type[property]\")",
      "target": "mypy.server.objgraph.isproperty"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 68,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 68,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression type contains \"Any\" (has type \"enumerate[Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 76,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 76,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.objgraph.get_edge_candidates"
    },
    {
      "code": "dynamic",
      "line": 81,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[BuiltinFunctionType], Type[FunctionType], Type[MethodType], Type[Callable[[object], Iterable[str]]], Type[Callable[[object, object], bool]], Type[Callable[[object], bool]]]\")",
      "target": "mypy.server.objgraph.get_edges"
    },
    {
      "code": "no-error-code",
      "line": 86,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "no-error-code",
      "line": 88,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Union[object, Any]\")",
      "target": "mypy.server.objgraph.get_edges"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Union[object, Any]\")",
      "target": "mypy.server.objgraph.get_edges"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Union[object, Any]\")",
      "target": "mypy.server.objgraph.get_edges"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Union[object, Any]\")",
      "target": "mypy.server.objgraph.get_edges"
    },
    {
      "code": "no-error-code",
      "line": 90,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 92,
      "message": "Expression type contains \"Any\" (has type \"Set[Type[ReferenceType[Any]]]\")",
      "target": "mypy.server.objgraph.get_edges"
    }
  ],
  "mypy/server/update.py": [
    {
      "code": "dynamic",
      "line": 233,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.server.update.FineGrainedBuildManager.update"
    },
    {
      "code": "dynamic",
      "line": 409,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.server.update.FineGrainedBuildManager.update_module"
    },
    {
      "code": "dynamic",
      "line": 825,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.server.update.propagate_changes_using_dependencies"
    },
    {
      "code": "dynamic",
      "line": 825,
      "message": "Expression has type \"Any\"",
      "target": "mypy.server.update.propagate_changes_using_dependencies"
    },
    {
      "code": "dynamic",
      "line": 834,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.server.update.propagate_changes_using_dependencies"
    }
  ],
  "mypy/split_namespace.py": [
    {
      "code": "dynamic",
      "line": 17,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.split_namespace.SplitNamespace.__init__"
    },
    {
      "code": "dynamic",
      "line": 18,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.split_namespace.SplitNamespace.__init__"
    },
    {
      "code": "dynamic",
      "line": 19,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.split_namespace.SplitNamespace.__init__"
    },
    {
      "code": "dynamic",
      "line": 21,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.split_namespace.SplitNamespace._get"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypy.split_namespace.SplitNamespace._get"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace._get"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace._get"
    },
    {
      "code": "dynamic",
      "line": 24,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 25,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 28,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 28,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__setattr__"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 31,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 34,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 34,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    },
    {
      "code": "dynamic",
      "line": 34,
      "message": "Expression has type \"Any\"",
      "target": "mypy.split_namespace.SplitNamespace.__getattr__"
    }
  ],
  "mypy/stats.py": [
    {
      "code": "dynamic",
      "line": 233,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.stats.StatisticsVisitor.record_call_target_precision"
    }
  ],
  "mypy/strconv.py": [
    {
      "code": "dynamic",
      "line": 74,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 74,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 76,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 78,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 80,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 81,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 82,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 83,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.func_helper"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_mypy_file"
    },
    {
      "code": "dynamic",
      "line": 91,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_mypy_file"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_mypy_file"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_mypy_file"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_mypy_file"
    },
    {
      "code": "dynamic",
      "line": 144,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 144,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 148,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 150,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 152,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 153,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_overloaded_func_def"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_assignment_stmt"
    },
    {
      "code": "dynamic",
      "line": 211,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_assignment_stmt"
    },
    {
      "code": "dynamic",
      "line": 213,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_assignment_stmt"
    },
    {
      "code": "dynamic",
      "line": 214,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_assignment_stmt"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_while_stmt"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_while_stmt"
    },
    {
      "code": "dynamic",
      "line": 222,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_while_stmt"
    },
    {
      "code": "dynamic",
      "line": 222,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_while_stmt"
    },
    {
      "code": "dynamic",
      "line": 223,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_while_stmt"
    },
    {
      "code": "dynamic",
      "line": 226,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 226,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 228,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 228,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 229,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 231,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 231,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 232,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 232,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 232,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 232,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 235,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_for_stmt"
    },
    {
      "code": "dynamic",
      "line": 241,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 241,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 243,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 243,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 244,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 244,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 247,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_if_stmt"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 282,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 282,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 287,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 289,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_try_stmt"
    },
    {
      "code": "dynamic",
      "line": 292,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 294,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 296,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 298,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_with_stmt"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_print_stmt"
    },
    {
      "code": "dynamic",
      "line": 306,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_print_stmt"
    },
    {
      "code": "dynamic",
      "line": 308,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_print_stmt"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_print_stmt"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.strconv.StrConv.str_repr"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.str_repr"
    },
    {
      "code": "dynamic",
      "line": 331,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.str_repr"
    },
    {
      "code": "dynamic",
      "line": 333,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypy.strconv.StrConv.str_repr"
    },
    {
      "code": "dynamic",
      "line": 333,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.str_repr"
    },
    {
      "code": "dynamic",
      "line": 333,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.str_repr"
    },
    {
      "code": "dynamic",
      "line": 397,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 397,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 402,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Tuple[str, List[Any]]]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Tuple[str, List[Any]]]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 406,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Tuple[str, List[Any]]]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 406,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 406,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 409,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 409,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 410,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 410,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 410,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Tuple[str, List[Any]]]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 410,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Tuple[str, List[Any]]]]\")",
      "target": "mypy.strconv.StrConv.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 460,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 462,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 462,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 464,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 464,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 466,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 466,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 468,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 468,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 469,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_type_var_expr"
    },
    {
      "code": "dynamic",
      "line": 474,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 476,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 476,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 478,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 478,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 481,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_paramspec_expr"
    },
    {
      "code": "dynamic",
      "line": 527,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 528,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 528,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 529,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 530,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 530,
      "message": "Expression has type \"Any\"",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 531,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    },
    {
      "code": "dynamic",
      "line": 532,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.strconv.StrConv.visit_slice_expr"
    }
  ],
  "mypy/stubdoc.py": [
    {
      "code": "dynamic",
      "line": 48,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubdoc.ArgSig.__eq__"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubdoc.ArgSig.__eq__"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypy.stubdoc.DocStringParser.get_signatures"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypy.stubdoc.DocStringParser.get_signatures"
    },
    {
      "code": "dynamic",
      "line": 278,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 280,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 283,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 283,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Union[str, Any], List[str], List[str]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 289,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 289,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 295,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 295,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 295,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 298,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 298,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 301,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Union[str, Any], List[Union[str, Any]], List[Union[str, Any]]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubdoc.parse_signature"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.parse_all_signatures"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.stubdoc.parse_all_signatures"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubdoc.infer_prop_type_from_docstring"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.stubdoc.infer_prop_type_from_docstring"
    }
  ],
  "mypy/stubgen.py": [
    {
      "code": "dynamic",
      "line": 641,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.stubgen.StubGenerator.visit_func_def"
    },
    {
      "code": "dynamic",
      "line": 672,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.stubgen.StubGenerator.visit_func_def"
    },
    {
      "code": "no-error-code",
      "line": 908,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 1654,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1657,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1664,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1665,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1667,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1669,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1669,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1669,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1669,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1673,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1674,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1677,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1678,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1679,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1679,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1680,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1681,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1682,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1683,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1684,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1685,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1686,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1687,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1688,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1689,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    },
    {
      "code": "dynamic",
      "line": 1690,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgen.parse_options"
    }
  ],
  "mypy/stubgenc.py": [
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Tuple[str, Any]], str]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Tuple[str, Any]], str]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 59,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 71,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 71,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 71,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 71,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 74,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 75,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_stub_for_c_module"
    },
    {
      "code": "dynamic",
      "line": 124,
      "message": "Expression type contains \"Any\" (has type \"Union[_SupportsSet[Any, Any], _SupportsDelete[Any]]\")",
      "target": "mypy.stubgenc.is_c_property"
    },
    {
      "code": "dynamic",
      "line": 127,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubgenc.is_c_property_readonly"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.is_c_property_readonly"
    },
    {
      "code": "dynamic",
      "line": 128,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.is_c_property_readonly"
    },
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_function_stub"
    },
    {
      "code": "dynamic",
      "line": 178,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_function_stub"
    },
    {
      "code": "dynamic",
      "line": 180,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_function_stub"
    },
    {
      "code": "dynamic",
      "line": 181,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_function_stub"
    },
    {
      "code": "dynamic",
      "line": 242,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubgenc.strip_or_import"
    },
    {
      "code": "dynamic",
      "line": 242,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.stubgenc.strip_or_import"
    },
    {
      "code": "dynamic",
      "line": 243,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubgenc.strip_or_import"
    },
    {
      "code": "dynamic",
      "line": 243,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubgenc.strip_or_import"
    },
    {
      "code": "dynamic",
      "line": 290,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_property_stub"
    },
    {
      "code": "dynamic",
      "line": 292,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_property_stub"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_property_stub"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubgenc.generate_c_property_stub"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"ItemsView[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[int, str]]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Tuple[str, Any]], Tuple[int, str]]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Tuple[str, Any]], Tuple[int, str]]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 328,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 336,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 336,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 336,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression type contains \"Any\" (has type \"Mapping[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 360,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 365,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 365,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 365,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 365,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.stubgenc.generate_c_type_stub"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Union[Any, str]]\")",
      "target": "mypy.stubgenc.get_type_fullname"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.stubgenc.get_type_fullname"
    },
    {
      "code": "dynamic",
      "line": 416,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubgenc.get_type_fullname"
    }
  ],
  "mypy/stubtest.py": [
    {
      "code": "dynamic",
      "line": 46,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest._style"
    },
    {
      "code": "dynamic",
      "line": 48,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.stubtest._style"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.stubtest._style"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.stubtest._style"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.Error.__init__"
    },
    {
      "code": "dynamic",
      "line": 77,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.Error.__init__"
    },
    {
      "code": "dynamic",
      "line": 78,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Node, Missing]\")",
      "target": "mypy.stubtest.Error.__init__"
    },
    {
      "code": "dynamic",
      "line": 79,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.Error.__init__"
    },
    {
      "code": "unreachable",
      "line": 109,
      "message": "Statement is unreachable",
      "target": "mypy.stubtest.Error.get_description"
    },
    {
      "code": "dynamic",
      "line": 113,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.Error.get_description"
    },
    {
      "code": "dynamic",
      "line": 115,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Error.get_description"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Error.get_description"
    },
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., _T]], _SingleDispatchCallable[_T]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 178,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify"
    },
    {
      "code": "dynamic",
      "line": 178,
      "message": "Type of decorated function contains type \"Any\" (\"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 189,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify"
    },
    {
      "code": "dynamic",
      "line": 192,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 192,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[MypyFile, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "unreachable",
      "line": 200,
      "message": "Statement is unreachable",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 211,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 213,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "no-any-return",
      "line": 214,
      "message": "Returning Any from function declared to return \"bool\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 214,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 214,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 215,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 218,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 218,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 220,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 231,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 241,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_mypyfile"
    },
    {
      "code": "dynamic",
      "line": 246,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 246,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[TypeInfo, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 246,
      "message": "Expression type contains \"Any\" (has type \"Callable[[TypeInfo, Union[Type[Any], Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 247,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 247,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[TypeInfo, Union[Type[Any], Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 247,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 250,
      "message": "Expression type contains \"Any\" (has type \"Union[Type[Any], Missing]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 250,
      "message": "Expression type contains \"Any\" (has type \"Union[Type[Any], Missing]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 253,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 253,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 253,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 253,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "unreachable",
      "line": 254,
      "message": "Statement is unreachable",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "unreachable",
      "line": 254,
      "message": "Statement is unreachable",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 261,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 261,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 273,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 273,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 273,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_typeinfo"
    },
    {
      "code": "dynamic",
      "line": 282,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 288,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"Type[classmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"Type[classmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"Type[classmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"Type[classmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Expression type contains \"Any\" (has type \"Type[staticmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Expression type contains \"Any\" (has type \"Type[staticmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 315,
      "message": "Expression type contains \"Any\" (has type \"Type[staticmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 315,
      "message": "Expression type contains \"Any\" (has type \"Type[staticmethod[Any]]\")",
      "target": "mypy.stubtest._verify_static_class_methods"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_arg_name"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_arg_name"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_arg_name"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_arg_name"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 365,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_arg_default_value"
    },
    {
      "code": "dynamic",
      "line": 412,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 413,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 413,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 415,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 419,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 422,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 427,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 427,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "no-any-return",
      "line": 428,
      "message": "Returning Any from function declared to return \"bool\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 428,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 428,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 428,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 429,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 433,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 434,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 436,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 438,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 438,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 441,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[bool, str]]\")",
      "target": "mypy.stubtest.Signature.__str__"
    },
    {
      "code": "dynamic",
      "line": 474,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 475,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 478,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 478,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 480,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 482,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 482,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 482,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 482,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.Signature.from_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 576,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 576,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 576,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 576,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 588,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 588,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 588,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 588,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 633,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 656,
      "message": "Expression type contains \"Any\" (has type \"Set[Union[str, Any]]\")",
      "target": "mypy.stubtest._verify_signature"
    },
    {
      "code": "dynamic",
      "line": 662,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 662,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[FuncItem, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 662,
      "message": "Expression type contains \"Any\" (has type \"Callable[[FuncItem, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 663,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 663,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[FuncItem, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 666,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 670,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 672,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 675,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 676,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 678,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 690,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_funcitem"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[Missing, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Missing, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 696,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_none"
    },
    {
      "code": "dynamic",
      "line": 696,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[Missing, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 699,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_none"
    },
    {
      "code": "dynamic",
      "line": 702,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 702,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[Var, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 702,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Var, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 703,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_var"
    },
    {
      "code": "dynamic",
      "line": 703,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[Var, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 706,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_var"
    },
    {
      "code": "dynamic",
      "line": 712,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_var"
    },
    {
      "code": "dynamic",
      "line": 721,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_var"
    },
    {
      "code": "dynamic",
      "line": 722,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_var"
    },
    {
      "code": "dynamic",
      "line": 731,
      "message": "Expression type contains \"Any\" (has type \"Union[Enum, Any]\")",
      "target": "mypy.stubtest.verify_var"
    },
    {
      "code": "dynamic",
      "line": 735,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 735,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[OverloadedFuncDef, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 735,
      "message": "Expression type contains \"Any\" (has type \"Callable[[OverloadedFuncDef, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 736,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 736,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[OverloadedFuncDef, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 739,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 747,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 748,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 749,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 752,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 753,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 755,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 773,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_overloadedfuncdef"
    },
    {
      "code": "dynamic",
      "line": 779,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 779,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[TypeVarExpr, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 779,
      "message": "Expression type contains \"Any\" (has type \"Callable[[TypeVarExpr, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 780,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_typevarexpr"
    },
    {
      "code": "dynamic",
      "line": 780,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[TypeVarExpr, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "unreachable",
      "line": 784,
      "message": "Statement is unreachable",
      "target": "mypy.stubtest.verify_typevarexpr"
    },
    {
      "code": "dynamic",
      "line": 787,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest._verify_property"
    },
    {
      "code": "dynamic",
      "line": 789,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_property"
    },
    {
      "code": "dynamic",
      "line": 789,
      "message": "Expression type contains \"Any\" (has type \"Type[property]\")",
      "target": "mypy.stubtest._verify_property"
    },
    {
      "code": "dynamic",
      "line": 791,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_property"
    },
    {
      "code": "dynamic",
      "line": 796,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest._verify_property"
    },
    {
      "code": "dynamic",
      "line": 798,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.stubtest._verify_property"
    },
    {
      "code": "dynamic",
      "line": 854,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 854,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[Decorator, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 854,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Decorator, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_decorator"
    },
    {
      "code": "dynamic",
      "line": 855,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[Decorator, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 858,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_decorator"
    },
    {
      "code": "dynamic",
      "line": 862,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_decorator"
    },
    {
      "code": "dynamic",
      "line": 863,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_decorator"
    },
    {
      "code": "dynamic",
      "line": 868,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_decorator"
    },
    {
      "code": "dynamic",
      "line": 871,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 871,
      "message": "Expression type contains \"Any\" (has type \"_SingleDispatchRegisterCallable[TypeAlias, _SingleDispatchCallable[Iterator[Error], Callable[[Union[Node, Missing], Union[Any, Missing], List[str]], Iterator[Error]]]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 871,
      "message": "Expression type contains \"Any\" (has type \"Callable[[TypeAlias, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 872,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 872,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[[TypeAlias, Union[Any, Missing], List[str]], Iterator[Error]]\")",
      "target": "mypy.stubtest"
    },
    {
      "code": "dynamic",
      "line": 875,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Missing]\")",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 880,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 883,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 883,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 883,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 884,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 888,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, Tuple[]]\")",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 888,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 888,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 890,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 898,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.verify_typealias"
    },
    {
      "code": "dynamic",
      "line": 916,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[FunctionType], Type[BuiltinFunctionType]]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[FunctionType], Type[BuiltinFunctionType]]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionType]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 918,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionType]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[MethodType], Type[BuiltinFunctionType]]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[MethodType], Type[BuiltinFunctionType]]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression type contains \"Any\" (has type \"Type[MethodType]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 919,
      "message": "Expression type contains \"Any\" (has type \"Type[MethodType]\")",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 920,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 920,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.is_probably_a_function"
    },
    {
      "code": "dynamic",
      "line": 924,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.safe_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 926,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.safe_inspect_signature"
    },
    {
      "code": "dynamic",
      "line": 953,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 959,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 961,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 961,
      "message": "Expression type contains \"Any\" (has type \"Type[property]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 969,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 970,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Type[FunctionType], Type[BuiltinFunctionType], Type[MethodType], Type[BuiltinFunctionType]]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 970,
      "message": "Expression type contains \"Any\" (has type \"Type[FunctionType]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 971,
      "message": "Expression type contains \"Any\" (has type \"Type[MethodType]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 986,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 986,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 986,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 986,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 988,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 988,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 988,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 989,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 989,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 990,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 991,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 992,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 993,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 993,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 993,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 993,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 994,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 995,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 995,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 995,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 997,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 997,
      "message": "Expression type contains \"Any\" (has type \"Type[Parameter]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1016,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1016,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1016,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1019,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1019,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1019,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1028,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1038,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1040,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1042,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.get_mypy_type_of_runtime_value"
    },
    {
      "code": "dynamic",
      "line": 1164,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1166,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1167,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1174,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1175,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1176,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1177,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1179,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1179,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1179,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1179,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1179,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1179,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1181,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1195,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1195,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1200,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1200,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1201,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1203,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1203,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1203,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1205,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1205,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1205,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1221,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1224,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1224,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1227,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1236,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubtest.test_stubs"
    },
    {
      "code": "dynamic",
      "line": 1269,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.stubtest.parse_options"
    }
  ],
  "mypy/stubutil.py": [
    {
      "code": "dynamic",
      "line": 103,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubutil.find_module_path_and_all_py2"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.stubutil.find_module_path_and_all_py2"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubutil.find_module_path_and_all_py2"
    },
    {
      "code": "dynamic",
      "line": 118,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubutil.find_module_path_using_py2_sys_path"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression has type \"Any\"",
      "target": "mypy.stubutil.find_module_path_using_py2_sys_path"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubutil.report_missing"
    },
    {
      "code": "dynamic",
      "line": 195,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubutil.report_missing"
    },
    {
      "code": "dynamic",
      "line": 195,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.stubutil.report_missing"
    }
  ],
  "mypy/subtypes.py": [
    {
      "code": "dynamic",
      "line": 302,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.SubtypeVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.SubtypeVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 438,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.SubtypeVisitor.visit_overloaded"
    },
    {
      "code": "dynamic",
      "line": 517,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.SubtypeVisitor.visit_type_type"
    },
    {
      "code": "dynamic",
      "line": 608,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.is_protocol_implementation"
    },
    {
      "code": "dynamic",
      "line": 676,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.find_member"
    },
    {
      "code": "dynamic",
      "line": 747,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.find_node_type"
    },
    {
      "code": "dynamic",
      "line": 766,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.non_method_protocol_members"
    },
    {
      "code": "dynamic",
      "line": 1129,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.subtypes.unify_generic_callable"
    },
    {
      "code": "dynamic",
      "line": 1133,
      "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any)], None]\")",
      "target": "mypy.subtypes.unify_generic_callable"
    },
    {
      "code": "dynamic",
      "line": 1335,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.ProperSubtypeVisitor.visit_instance"
    },
    {
      "code": "dynamic",
      "line": 1362,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.ProperSubtypeVisitor.visit_callable_type"
    },
    {
      "code": "dynamic",
      "line": 1432,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.subtypes.ProperSubtypeVisitor.visit_type_type"
    }
  ],
  "mypy/suggestions.py": [
    {
      "code": "attr-defined",
      "line": 51,
      "message": "Module \"mypy.checkexpr\" does not explicitly export attribute \"map_actuals_to_formals\"; implicit reexport disabled",
      "target": "mypy.suggestions"
    },
    {
      "code": "dynamic",
      "line": 154,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 157,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 159,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], AnyType]\")",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression type contains \"Any\" (has type \"enumerate[Any]\")",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 162,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 162,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 163,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 163,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 163,
      "message": "Expression has type \"Any\"",
      "target": "mypy.suggestions.ArgUseFinder.visit_call_expr"
    },
    {
      "code": "dynamic",
      "line": 294,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_starting_type"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression type contains \"Any\" (has type \"islice[Tuple[Any, ...]]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression type contains \"Any\" (has type \"product[Tuple[Any, ...]]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 370,
      "message": "Expression type contains \"Any\" (has type \"product[Tuple[Any, ...]]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 371,
      "message": "Expression type contains \"Any\" (has type \"islice[Tuple[Any, ...]]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses"
    },
    {
      "code": "dynamic",
      "line": 408,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[int, int]]\")",
      "target": "mypy.suggestions.SuggestionEngine.find_best"
    },
    {
      "code": "dynamic",
      "line": 421,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses_from_parent"
    },
    {
      "code": "dynamic",
      "line": 421,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.SuggestionEngine.get_guesses_from_parent"
    },
    {
      "code": "dynamic",
      "line": 604,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.SuggestionEngine.extract_from_decorator"
    },
    {
      "code": "dynamic",
      "line": 672,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.suggestions.SuggestionEngine.json_suggestion"
    },
    {
      "code": "dynamic",
      "line": 716,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.SuggestionEngine.score_type"
    },
    {
      "code": "dynamic",
      "line": 716,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.SuggestionEngine.score_type"
    },
    {
      "code": "dynamic",
      "line": 742,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.any_score_type"
    },
    {
      "code": "dynamic",
      "line": 742,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.any_score_type"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.refine_type"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.refine_type"
    },
    {
      "code": "dynamic",
      "line": 951,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.suggestions.refine_type"
    }
  ],
  "mypy/test/data.py": [
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.parse_test_case"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.parse_test_case"
    },
    {
      "code": "dynamic",
      "line": 262,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.runtest"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.runtest"
    },
    {
      "code": "dynamic",
      "line": 265,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.runtest"
    },
    {
      "code": "dynamic",
      "line": 294,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.DataDrivenTestCase.setup"
    },
    {
      "code": "dynamic",
      "line": 329,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 330,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 330,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 337,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataDrivenTestCase.repr_failure"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.module_from_path"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.module_from_path"
    },
    {
      "code": "dynamic",
      "line": 359,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.module_from_path"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 485,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 485,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 487,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 487,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 489,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 490,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 491,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 492,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 494,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 497,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 497,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.expand_errors"
    },
    {
      "code": "dynamic",
      "line": 510,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Union[str, Any], ...]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 510,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 510,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 510,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 512,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 512,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 512,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 512,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_win_path"
    },
    {
      "code": "dynamic",
      "line": 524,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_cobertura_filename"
    },
    {
      "code": "dynamic",
      "line": 524,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.fix_cobertura_filename"
    },
    {
      "code": "dynamic",
      "line": 537,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 538,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 538,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 539,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 542,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 544,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 546,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_addoption"
    },
    {
      "code": "dynamic",
      "line": 552,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.data.pytest_pycollect_makeitem"
    },
    {
      "code": "dynamic",
      "line": 558,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.test.data.pytest_pycollect_makeitem"
    },
    {
      "code": "dynamic",
      "line": 564,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_pycollect_makeitem"
    },
    {
      "code": "dynamic",
      "line": 565,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.pytest_pycollect_makeitem"
    },
    {
      "code": "dynamic",
      "line": 581,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 590,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 590,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 590,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 590,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 592,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 592,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 593,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 594,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 594,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 596,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 596,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 598,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 598,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 598,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 598,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 599,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 603,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 604,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 605,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 606,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 608,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 609,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 610,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 612,
      "message": "Expression type contains \"Any\" (has type \"Union[int, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 615,
      "message": "Expression type contains \"Any\" (has type \"Set[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 615,
      "message": "Expression type contains \"Any\" (has type \"Set[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 615,
      "message": "Expression type contains \"Any\" (has type \"Set[Union[str, Any]]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 615,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 615,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "dynamic",
      "line": 615,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.data.split_test_cases"
    },
    {
      "code": "no-any-return",
      "line": 646,
      "message": "Returning Any from function declared to return \"DataFileCollector\"",
      "target": "mypy.test.data.DataFileCollector.from_parent"
    },
    {
      "code": "dynamic",
      "line": 646,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataFileCollector.from_parent"
    },
    {
      "code": "dynamic",
      "line": 651,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataFileCollector.collect"
    },
    {
      "code": "dynamic",
      "line": 652,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataFileCollector.collect"
    },
    {
      "code": "dynamic",
      "line": 652,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataFileCollector.collect"
    },
    {
      "code": "dynamic",
      "line": 652,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataFileCollector.collect"
    },
    {
      "code": "dynamic",
      "line": 652,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.data.DataFileCollector.collect"
    }
  ],
  "mypy/test/helpers.py": [
    {
      "code": "dynamic",
      "line": 126,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.test.helpers.assert_module_equivalence"
    },
    {
      "code": "dynamic",
      "line": 126,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.test.helpers.assert_module_equivalence"
    },
    {
      "code": "dynamic",
      "line": 310,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.helpers.retry_on_error"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 378,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 379,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 379,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.helpers.parse_options"
    },
    {
      "code": "dynamic",
      "line": 482,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.test.helpers.normalize_file_output"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.test.helpers.normalize_file_output"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.test.helpers.normalize_file_output"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.test.helpers.normalize_file_output"
    },
    {
      "code": "dynamic",
      "line": 483,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypy.test.helpers.normalize_file_output"
    }
  ],
  "mypy/test/testapi.py": [
    {
      "code": "attr-defined",
      "line": 6,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testapi"
    },
    {
      "code": "dynamic",
      "line": 9,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testapi"
    },
    {
      "code": "no-any-unimported",
      "line": 9,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testapi"
    }
  ],
  "mypy/test/testargs.py": [
    {
      "code": "attr-defined",
      "line": 10,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testargs"
    },
    {
      "code": "dynamic",
      "line": 15,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testargs"
    },
    {
      "code": "no-any-unimported",
      "line": 15,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testargs"
    }
  ],
  "mypy/test/testcheck.py": [
    {
      "code": "dynamic",
      "line": 131,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.run_case"
    },
    {
      "code": "dynamic",
      "line": 232,
      "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.run_case_once"
    },
    {
      "code": "dynamic",
      "line": 232,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testcheck.TypeCheckSuite.run_case_once"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
    },
    {
      "code": "dynamic",
      "line": 298,
      "message": "Expression type contains \"Any\" (has type \"Set[Union[str, Any]]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
    },
    {
      "code": "dynamic",
      "line": 298,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
    },
    {
      "code": "dynamic",
      "line": 298,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
    },
    {
      "code": "dynamic",
      "line": 299,
      "message": "Expression type contains \"Any\" (has type \"Set[Union[str, Any]]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_error_message_paths"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files"
    },
    {
      "code": "dynamic",
      "line": 313,
      "message": "Expression type contains \"Any\" (has type \"Optional[CacheMeta]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.find_missing_cache_files"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 352,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[Union[str, Any], str, str]]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Union[str, Any], str, str]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Union[str, Any], str, str]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[Union[str, Any], str, str]]\")",
      "target": "mypy.test.testcheck.TypeCheckSuite.parse_module"
    }
  ],
  "mypy/test/testcmdline.py": [
    {
      "code": "dynamic",
      "line": 122,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcmdline.parse_args"
    },
    {
      "code": "dynamic",
      "line": 122,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.testcmdline.parse_args"
    },
    {
      "code": "dynamic",
      "line": 137,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testcmdline.parse_cwd"
    },
    {
      "code": "dynamic",
      "line": 137,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.test.testcmdline.parse_cwd"
    }
  ],
  "mypy/test/testdaemon.py": [
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypy.test.testdaemon.run_cmd"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testdaemon.run_cmd"
    }
  ],
  "mypy/test/testfinegrained.py": [
    {
      "code": "unreachable",
      "line": 79,
      "message": "Statement is unreachable",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_case"
    },
    {
      "code": "dynamic",
      "line": 171,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 172,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.run_check"
    },
    {
      "code": "dynamic",
      "line": 200,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.get_build_steps"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
    },
    {
      "code": "dynamic",
      "line": 293,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.parse_sources"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 314,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 314,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 316,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 317,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 317,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 317,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 320,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any, None]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 326,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 327,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.maybe_suggest"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.get_suggest"
    },
    {
      "code": "dynamic",
      "line": 335,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.test.testfinegrained.FineGrainedSuite.get_suggest"
    }
  ],
  "mypy/test/testgraph.py": [
    {
      "code": "attr-defined",
      "line": 6,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testgraph"
    },
    {
      "code": "dynamic",
      "line": 18,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testgraph"
    },
    {
      "code": "no-any-unimported",
      "line": 18,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testgraph"
    }
  ],
  "mypy/test/testinfer.py": [
    {
      "code": "attr-defined",
      "line": 5,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "dynamic",
      "line": 14,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "no-any-unimported",
      "line": 14,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "no-any-unimported",
      "line": 230,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "dynamic",
      "line": 287,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "no-any-unimported",
      "line": 287,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testinfer"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"Dict[int, Tuple[Any, ...]]\")",
      "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
    },
    {
      "code": "dynamic",
      "line": 309,
      "message": "Expression type contains \"Any\" (has type \"List[Dict[int, Tuple[Any, ...]]]\")",
      "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"Dict[int, Tuple[Any, ...]]\")",
      "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
    },
    {
      "code": "dynamic",
      "line": 315,
      "message": "Expression type contains \"Any\" (has type \"Dict[int, Tuple[Any, ...]]\")",
      "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
    },
    {
      "code": "dynamic",
      "line": 319,
      "message": "Expression type contains \"Any\" (has type \"Dict[int, Tuple[Any, ...]]\")",
      "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"Dict[int, Tuple[Any, ...]]\")",
      "target": "mypy.test.testinfer.OperandComparisonGroupingSuite.test_basic_cases"
    }
  ],
  "mypy/test/testmerge.py": [
    {
      "code": "unreachable",
      "line": 183,
      "message": "Statement is unreachable",
      "target": "mypy.test.testmerge.ASTMergeSuite.format_symbol_table_node"
    },
    {
      "code": "dynamic",
      "line": 200,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.test.testmerge.ASTMergeSuite.dump_typeinfos_recursive"
    },
    {
      "code": "dynamic",
      "line": 200,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testmerge.ASTMergeSuite.dump_typeinfos_recursive"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[Any, str, str]]\")",
      "target": "mypy.test.testmerge.ASTMergeSuite.dump_types"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, str, str]\")",
      "target": "mypy.test.testmerge.ASTMergeSuite.dump_types"
    },
    {
      "code": "dynamic",
      "line": 230,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testmerge.ASTMergeSuite.dump_types"
    }
  ],
  "mypy/test/testmodulefinder.py": [
    {
      "code": "attr-defined",
      "line": 11,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testmodulefinder"
    },
    {
      "code": "dynamic",
      "line": 16,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testmodulefinder"
    },
    {
      "code": "no-any-unimported",
      "line": 16,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testmodulefinder"
    },
    {
      "code": "dynamic",
      "line": 144,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testmodulefinder"
    },
    {
      "code": "no-any-unimported",
      "line": 144,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testmodulefinder"
    }
  ],
  "mypy/test/testpep561.py": [
    {
      "code": "dynamic",
      "line": 170,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testpep561.parse_mypy_args"
    },
    {
      "code": "dynamic",
      "line": 170,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.testpep561.parse_mypy_args"
    },
    {
      "code": "unreachable",
      "line": 175,
      "message": "Statement is unreachable",
      "target": "mypy.test.testpep561.test_mypy_path_is_respected"
    }
  ],
  "mypy/test/testpythoneval.py": [
    {
      "code": "unreachable",
      "line": 70,
      "message": "Statement is unreachable",
      "target": "mypy.test.testpythoneval.test_python_evaluation"
    },
    {
      "code": "dynamic",
      "line": 77,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.testpythoneval.test_python_evaluation"
    },
    {
      "code": "dynamic",
      "line": 77,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.testpythoneval.test_python_evaluation"
    }
  ],
  "mypy/test/testreports.py": [
    {
      "code": "attr-defined",
      "line": 4,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testreports"
    },
    {
      "code": "dynamic",
      "line": 8,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testreports"
    },
    {
      "code": "no-any-unimported",
      "line": 8,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testreports"
    },
    {
      "code": "no-error-code",
      "line": 14,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 23,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
    },
    {
      "code": "dynamic",
      "line": 23,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
    },
    {
      "code": "dynamic",
      "line": 23,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
    },
    {
      "code": "dynamic",
      "line": 40,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
    },
    {
      "code": "dynamic",
      "line": 40,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
    },
    {
      "code": "dynamic",
      "line": 40,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testreports.CoberturaReportSuite.test_as_xml"
    }
  ],
  "mypy/test/testsolve.py": [
    {
      "code": "attr-defined",
      "line": 5,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testsolve"
    },
    {
      "code": "dynamic",
      "line": 12,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testsolve"
    },
    {
      "code": "no-any-unimported",
      "line": 12,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testsolve"
    }
  ],
  "mypy/test/teststubgen.py": [
    {
      "code": "dynamic",
      "line": 36,
      "message": "Expression type contains \"Any\" (has type \"Callable[[_FT], _FT]\")",
      "target": "mypy.test.teststubgen"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression type contains \"Any\" (has type \"Callable[[_FT], _FT]\")",
      "target": "mypy.test.teststubgen"
    },
    {
      "code": "dynamic",
      "line": 77,
      "message": "Expression type contains \"Any\" (has type \"Callable[[_FT], _FT]\")",
      "target": "mypy.test.teststubgen"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.teststubgen.StubgenCmdLineSuite.run"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.test.teststubgen.StubgenCmdLineSuite.run"
    },
    {
      "code": "dynamic",
      "line": 115,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.test.teststubgen.StubgenCliParseSuite.test_walk_packages"
    },
    {
      "code": "dynamic",
      "line": 457,
      "message": "Expression type contains \"Any\" (has type \"Callable[[_FT], _FT]\")",
      "target": "mypy.test.teststubgen"
    },
    {
      "code": "dynamic",
      "line": 475,
      "message": "Expression type contains \"Any\" (has type \"Callable[[_FT], _FT]\")",
      "target": "mypy.test.teststubgen"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
    },
    {
      "code": "dynamic",
      "line": 607,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
    },
    {
      "code": "dynamic",
      "line": 610,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
    },
    {
      "code": "dynamic",
      "line": 610,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
    },
    {
      "code": "dynamic",
      "line": 611,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_flags"
    },
    {
      "code": "dynamic",
      "line": 620,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_modules"
    },
    {
      "code": "dynamic",
      "line": 620,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypy.test.teststubgen.StubgenPythonSuite.parse_modules"
    },
    {
      "code": "dynamic",
      "line": 729,
      "message": "Expression type contains \"Any\" (has type \"Type[TestClass]\")",
      "target": "mypy.test.teststubgen.StubgencSuite.test_generate_c_type_inheritance_builtin_type"
    },
    {
      "code": "dynamic",
      "line": 872,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.teststubgen.StubgencSuite.test_generate_c_property_with_pybind11"
    }
  ],
  "mypy/test/teststubtest.py": [
    {
      "code": "dynamic",
      "line": 101,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 110,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Expression type contains \"Any\" (has type \"Callable[[VarArg(Any), KwArg(Any)], None]\")",
      "target": "mypy.test.teststubtest.collect_cases"
    },
    {
      "code": "dynamic",
      "line": 134,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 135,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 153,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 154,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 175,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 176,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 216,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 217,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 245,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 246,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 280,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 281,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 345,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 363,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 364,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 430,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 431,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 486,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 487,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 538,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 539,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 576,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 577,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 600,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 601,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 620,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 621,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 637,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 638,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 661,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 662,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 667,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 668,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 672,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 673,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 680,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 681,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 705,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 706,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 721,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 722,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 753,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 754,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 787,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Callable[..., Iterator[Case]]], Callable[..., None]]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 788,
      "message": "Type of decorated function contains type \"Any\" (\"Callable[..., None]\")",
      "target": "mypy.test.teststubtest"
    },
    {
      "code": "dynamic",
      "line": 959,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.test.teststubtest.StubtestMiscUnit.test_signature"
    },
    {
      "code": "dynamic",
      "line": 963,
      "message": "Expression type contains \"Any\" (has type \"Callable[[int, int, NamedArg(int, 'c'), DefaultNamedArg(int, 'd'), KwArg(Any)], None]\")",
      "target": "mypy.test.teststubtest.StubtestMiscUnit.test_signature"
    },
    {
      "code": "dynamic",
      "line": 963,
      "message": "Expression type contains \"Any\" (has type \"Callable[[int, int, NamedArg(int, 'c'), DefaultNamedArg(int, 'd'), KwArg(Any)], None]\")",
      "target": "mypy.test.teststubtest.StubtestMiscUnit.test_signature"
    }
  ],
  "mypy/test/testsubtypes.py": [
    {
      "code": "attr-defined",
      "line": 1,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testsubtypes"
    },
    {
      "code": "dynamic",
      "line": 8,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testsubtypes"
    },
    {
      "code": "no-any-unimported",
      "line": 8,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testsubtypes"
    }
  ],
  "mypy/test/testtypegen.py": [
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[Any, str, str]]\")",
      "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, str, str]\")",
      "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypy.test.testtypegen.TypeExportSuite.run_case"
    }
  ],
  "mypy/test/testtypes.py": [
    {
      "code": "attr-defined",
      "line": 5,
      "message": "Module \"mypy.test.helpers\" does not explicitly export attribute \"Suite\"; implicit reexport disabled",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "dynamic",
      "line": 23,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "no-any-unimported",
      "line": 23,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "dynamic",
      "line": 129,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "no-any-unimported",
      "line": 129,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "no-any-unimported",
      "line": 511,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "dynamic",
      "line": 756,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.test.testtypes.JoinSuite.test_simple_type_objects"
    },
    {
      "code": "dynamic",
      "line": 850,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "no-any-unimported",
      "line": 850,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "dynamic",
      "line": 1053,
      "message": "Class cannot subclass \"Suite\" (has type \"Any\")",
      "target": "mypy.test.testtypes"
    },
    {
      "code": "no-any-unimported",
      "line": 1053,
      "message": "Base type Suite becomes \"Any\" due to an unfollowed import",
      "target": "mypy.test.testtypes"
    }
  ],
  "mypy/type_visitor.py": [
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.type_visitor"
    },
    {
      "code": "dynamic",
      "line": 111,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.type_visitor"
    },
    {
      "code": "no-error-code",
      "line": 173,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "dynamic",
      "line": 200,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.type_visitor.TypeTranslator.visit_tuple_type"
    },
    {
      "code": "dynamic",
      "line": 200,
      "message": "Expression has type \"Any\"",
      "target": "mypy.type_visitor.TypeTranslator.visit_tuple_type"
    },
    {
      "code": "dynamic",
      "line": 200,
      "message": "Expression has type \"Any\"",
      "target": "mypy.type_visitor.TypeTranslator.visit_tuple_type"
    },
    {
      "code": "dynamic",
      "line": 211,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.type_visitor.TypeTranslator.visit_typeddict_type"
    },
    {
      "code": "dynamic",
      "line": 211,
      "message": "Expression has type \"Any\"",
      "target": "mypy.type_visitor.TypeTranslator.visit_typeddict_type"
    },
    {
      "code": "dynamic",
      "line": 211,
      "message": "Expression has type \"Any\"",
      "target": "mypy.type_visitor.TypeTranslator.visit_typeddict_type"
    },
    {
      "code": "no-error-code",
      "line": 216,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "no-error-code",
      "line": 238,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    }
  ],
  "mypy/typeanal.py": [
    {
      "code": "dynamic",
      "line": 801,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeanal.TypeAnalyser.analyze_callable_type"
    },
    {
      "code": "no-error-code",
      "line": 1204,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    }
  ],
  "mypy/typeops.py": [
    {
      "code": "dynamic",
      "line": 82,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops.type_object_type_from_function"
    },
    {
      "code": "dynamic",
      "line": 196,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops.bind_self"
    },
    {
      "code": "dynamic",
      "line": 248,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops.bind_self"
    },
    {
      "code": "dynamic",
      "line": 248,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops.bind_self"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops._get_type_special_method_bool_ret_type"
    },
    {
      "code": "dynamic",
      "line": 752,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 758,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Tuple[Set[Any], List[int]]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 759,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Tuple[Set[Any], List[int]]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 759,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Set[Any], List[int]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 759,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 759,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 761,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 761,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Tuple[Set[Any], List[int]]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Set[Any], List[int]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Tuple[Set[Any], List[int]]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Set[Any], List[int]]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 763,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 764,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 766,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 770,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 770,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.typeops.try_contracting_literals_in_union"
    },
    {
      "code": "dynamic",
      "line": 829,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops.custom_special_method"
    },
    {
      "code": "dynamic",
      "line": 829,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.typeops.custom_special_method"
    }
  ],
  "mypy/types.py": [
    {
      "code": "dynamic",
      "line": 26,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 26,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 130,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.TypeAliasType.serialize"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.TypeAliasType.serialize"
    },
    {
      "code": "dynamic",
      "line": 318,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypeAliasType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 488,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.TypeVarType.serialize"
    },
    {
      "code": "dynamic",
      "line": 492,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.TypeVarType.serialize"
    },
    {
      "code": "dynamic",
      "line": 492,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.TypeVarType.serialize"
    },
    {
      "code": "dynamic",
      "line": 499,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypeVarType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 504,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypeVarType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 504,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypeVarType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 580,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.ParamSpecType.serialize"
    },
    {
      "code": "dynamic",
      "line": 591,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.ParamSpecType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 646,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnboundType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 673,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.UnboundType.serialize"
    },
    {
      "code": "dynamic",
      "line": 675,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.UnboundType.serialize"
    },
    {
      "code": "dynamic",
      "line": 675,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.UnboundType.serialize"
    },
    {
      "code": "dynamic",
      "line": 682,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnboundType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 684,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnboundType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 684,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnboundType.deserialize"
    },
    {
      "code": "no-any-return",
      "line": 711,
      "message": "Returning Any from function declared to return \"T\"",
      "target": "mypy.types.CallableArgument.accept"
    },
    {
      "code": "no-any-return",
      "line": 736,
      "message": "Returning Any from function declared to return \"T\"",
      "target": "mypy.types.TypeList.accept"
    },
    {
      "code": "dynamic",
      "line": 786,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.AnyType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 788,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.AnyType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 801,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.AnyType.serialize"
    },
    {
      "code": "dynamic",
      "line": 807,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.AnyType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 857,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.UninhabitedType.serialize"
    },
    {
      "code": "dynamic",
      "line": 862,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UninhabitedType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 890,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.NoneType.serialize"
    },
    {
      "code": "dynamic",
      "line": 894,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.NoneType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 934,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.DeletedType.serialize"
    },
    {
      "code": "dynamic",
      "line": 939,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.DeletedType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1061,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.Instance.serialize"
    },
    {
      "code": "dynamic",
      "line": 1072,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Instance.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1090,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Instance.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1093,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Instance.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1094,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Instance.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1164,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.types.CallableType.__init__"
    },
    {
      "code": "dynamic",
      "line": 1204,
      "message": "Expression type contains \"Any\" (has type \"Optional[Dict[str, Any]]\")",
      "target": "mypy.types.CallableType.__init__"
    },
    {
      "code": "dynamic",
      "line": 1205,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.__init__"
    },
    {
      "code": "dynamic",
      "line": 1214,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.types.CallableType.__init__"
    },
    {
      "code": "dynamic",
      "line": 1214,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypy.types.CallableType.__init__"
    },
    {
      "code": "dynamic",
      "line": 1214,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, None, List[Optional[str]], TypeInfo, bool]\")",
      "target": "mypy.types.CallableType.__init__"
    },
    {
      "code": "dynamic",
      "line": 1225,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1245,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1246,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1247,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1248,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1249,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1250,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1251,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1252,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1253,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1254,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1256,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1257,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1258,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1259,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1260,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1261,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1262,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.copy_modified"
    },
    {
      "code": "dynamic",
      "line": 1435,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.types.CallableType.__eq__"
    },
    {
      "code": "dynamic",
      "line": 1449,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1450,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1450,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1451,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1451,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1457,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1457,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1460,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1460,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1462,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Dict[Any, Any]]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1462,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1462,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1462,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.CallableType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1468,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1471,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1471,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1472,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1472,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1477,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1480,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1480,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1480,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.CallableType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1543,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.Overloaded.serialize"
    },
    {
      "code": "dynamic",
      "line": 1544,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.Overloaded.serialize"
    },
    {
      "code": "dynamic",
      "line": 1544,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.Overloaded.serialize"
    },
    {
      "code": "dynamic",
      "line": 1549,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Overloaded.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1550,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Overloaded.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1550,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.types.Overloaded.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1550,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.Overloaded.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1615,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.TupleType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1616,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.TupleType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1616,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.TupleType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1623,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TupleType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1624,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TupleType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1624,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TupleType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1696,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.TypedDictType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1697,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.TypedDictType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1697,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.TypedDictType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1697,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.TypedDictType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1698,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.TypedDictType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1698,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.TypedDictType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1704,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[Any, Type]]\")",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Type]\")",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Type]\")",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 1705,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypedDictType.deserialize"
    },
    {
      "code": "no-any-return",
      "line": 1821,
      "message": "Returning Any from function declared to return \"T\"",
      "target": "mypy.types.RawExpressionType.accept"
    },
    {
      "code": "dynamic",
      "line": 1910,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.LiteralType.serialize"
    },
    {
      "code": "dynamic",
      "line": 1918,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.LiteralType.deserialize"
    },
    {
      "code": "no-any-return",
      "line": 1941,
      "message": "Returning Any from function declared to return \"T\"",
      "target": "mypy.types.StarType.accept"
    },
    {
      "code": "dynamic",
      "line": 2021,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.UnionType.serialize"
    },
    {
      "code": "dynamic",
      "line": 2022,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypy.types.UnionType.serialize"
    },
    {
      "code": "dynamic",
      "line": 2022,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypy.types.UnionType.serialize"
    },
    {
      "code": "dynamic",
      "line": 2027,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnionType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2028,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnionType.deserialize"
    },
    {
      "code": "dynamic",
      "line": 2028,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.UnionType.deserialize"
    },
    {
      "code": "no-any-return",
      "line": 2080,
      "message": "Returning Any from function declared to return \"T\"",
      "target": "mypy.types.EllipsisType.accept"
    },
    {
      "code": "dynamic",
      "line": 2151,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types.TypeType.serialize"
    },
    {
      "code": "dynamic",
      "line": 2155,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types.TypeType.deserialize"
    },
    {
      "code": "no-any-return",
      "line": 2184,
      "message": "Returning Any from function declared to return \"T\"",
      "target": "mypy.types.PlaceholderType.accept"
    },
    {
      "code": "unreachable",
      "line": 2316,
      "message": "Statement is unreachable",
      "target": "mypy.types.TypeStrVisitor.visit_type_var"
    },
    {
      "code": "unreachable",
      "line": 2327,
      "message": "Statement is unreachable",
      "target": "mypy.types.TypeStrVisitor.visit_param_spec"
    },
    {
      "code": "dynamic",
      "line": 2493,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypy.types.strip_type"
    },
    {
      "code": "dynamic",
      "line": 2642,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2642,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2643,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2644,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2644,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2644,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2646,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2646,
      "message": "Expression type contains \"Any\" (has type \"dict_items[str, Any]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2647,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2647,
      "message": "Expression has type \"Any\"",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2647,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.types"
    },
    {
      "code": "dynamic",
      "line": 2647,
      "message": "Expression type contains \"Any\" (has type \"Type[type]\")",
      "target": "mypy.types"
    }
  ],
  "mypy/typetraverser.py": [
    {
      "code": "dynamic",
      "line": 13,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.typetraverser"
    }
  ],
  "mypy/util.py": [
    {
      "code": "dynamic",
      "line": 97,
      "message": "Expression type contains \"Any\" (has type \"Union[bytes, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression type contains \"Any\" (has type \"Union[bytes, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Union[bool, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Union[str, Any], int]\")",
      "target": "mypy.util.find_python_encoding"
    },
    {
      "code": "dynamic",
      "line": 339,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], bool]\")",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression has type \"Any\"",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression has type \"Any\"",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 341,
      "message": "Expression has type \"Any\"",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Any]\")",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression has type \"Any\"",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 342,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[str, Any]]\")",
      "target": "mypy.util.get_class_descriptors"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.util.replace_object_state"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypy.util.replace_object_state"
    },
    {
      "code": "dynamic",
      "line": 363,
      "message": "Expression has type \"Any\"",
      "target": "mypy.util.replace_object_state"
    }
  ],
  "mypy/visitor.py": [
    {
      "code": "dynamic",
      "line": 16,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.visitor"
    },
    {
      "code": "dynamic",
      "line": 196,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.visitor"
    },
    {
      "code": "dynamic",
      "line": 314,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypy.visitor"
    }
  ],
  "mypyc/analysis/dataflow.py": [
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "no-any-return",
      "line": 35,
      "message": "Returning Any from function declared to return \"Union[SupportsDunderLT, SupportsDunderGT]\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 35,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "no-any-return",
      "line": 35,
      "message": "Returning Any from function declared to return \"Union[SupportsDunderLT, SupportsDunderGT]\"",
      "target": "mypyc.analysis.dataflow.CFG.__str__"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression type contains \"Any\" (has type \"Type[Dict[Any, Any]]\")",
      "target": "mypyc.analysis.dataflow"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression type contains \"Any\" (has type \"Type[Dict[Any, Any]]\")",
      "target": "mypyc.analysis.dataflow"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression type contains \"Any\" (has type \"Type[Dict[Any, Any]]\")",
      "target": "mypyc.analysis.dataflow"
    },
    {
      "code": "dynamic",
      "line": 119,
      "message": "Expression type contains \"Any\" (has type \"Type[Dict[Any, Any]]\")",
      "target": "mypyc.analysis.dataflow"
    }
  ],
  "mypyc/build.py": [
    {
      "code": "attr-defined",
      "line": 33,
      "message": "Module \"mypy.build\" does not explicitly export attribute \"BuildSource\"; implicit reexport disabled",
      "target": "mypyc.build"
    },
    {
      "code": "no-error-code",
      "line": 50,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "no-error-code",
      "line": 66,
      "message": "No error code on \"type: ignore\" comment",
      "target": null
    },
    {
      "code": "no-any-unimported",
      "line": 90,
      "message": "Return type becomes \"Tuple[List[Any], List[Any], Options]\" due to an unfollowed import",
      "target": "mypyc.build.get_mypy_config"
    },
    {
      "code": "no-any-unimported",
      "line": 173,
      "message": "Argument 1 to \"generate_c\" becomes \"List[Any]\" due to an unfollowed import",
      "target": "mypyc.build.generate_c"
    },
    {
      "code": "no-any-unimported",
      "line": 173,
      "message": "Argument 3 to \"generate_c\" becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.build.generate_c"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.generate_c"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.generate_c"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.generate_c"
    },
    {
      "code": "dynamic",
      "line": 208,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.generate_c"
    },
    {
      "code": "no-any-unimported",
      "line": 233,
      "message": "Argument 1 to \"build_using_shared_lib\" becomes \"List[Any]\" due to an unfollowed import",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 259,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 259,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 260,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 260,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 260,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 260,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 261,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 261,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 261,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 265,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 265,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 266,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 266,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 267,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 268,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 268,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 268,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "dynamic",
      "line": 270,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_using_shared_lib"
    },
    {
      "code": "no-any-unimported",
      "line": 278,
      "message": "Argument 1 to \"build_single_module\" becomes \"List[Any]\" due to an unfollowed import",
      "target": "mypyc.build.build_single_module"
    },
    {
      "code": "dynamic",
      "line": 287,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.build_single_module"
    },
    {
      "code": "dynamic",
      "line": 287,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_single_module"
    },
    {
      "code": "dynamic",
      "line": 287,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.build_single_module"
    },
    {
      "code": "no-any-unimported",
      "line": 322,
      "message": "Return type becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "no-any-unimported",
      "line": 322,
      "message": "Argument 1 to \"construct_groups\" becomes \"List[Any]\" due to an unfollowed import",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "no-any-unimported",
      "line": 338,
      "message": "Type of variable becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], None]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 338,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 343,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 344,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 345,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 345,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 345,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 346,
      "message": "Expression type contains \"Any\" (has type \"Set[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], None]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], None]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"enumerate[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 356,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.construct_groups"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.get_header_deps"
    },
    {
      "code": "no-any-unimported",
      "line": 377,
      "message": "Return type becomes \"Tuple[List[Tuple[List[Any], Optional[str]]], List[Tuple[List[str], List[str]]]]\" due to an unfollowed import",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 388,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], List[Any], Options]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 388,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], List[Any], Options]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 388,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 388,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 395,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 395,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 396,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 400,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 404,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 405,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 405,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 405,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 405,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 426,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Tuple[List[Any], Optional[str]]], List[Tuple[List[str], List[str]]]]\")",
      "target": "mypyc.build.mypyc_build"
    },
    {
      "code": "dynamic",
      "line": 429,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 494,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Tuple[List[Any], Optional[str]]], List[Tuple[List[str], List[str]]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 494,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Tuple[List[Any], Optional[str]]], List[Tuple[List[str], List[str]]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 494,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 499,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 499,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 508,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 509,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 514,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 514,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 514,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 522,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 525,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 525,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 525,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Tuple[List[Any], Optional[str]], Tuple[List[str], List[str]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Tuple[List[Any], Optional[str]], Tuple[List[str], List[str]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Tuple[List[Any], Optional[str]], Tuple[List[str], List[str]]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 555,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 558,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 558,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypycify"
    },
    {
      "code": "dynamic",
      "line": 561,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.build.mypycify"
    }
  ],
  "mypyc/codegen/emitclass.py": [
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypyc.codegen.emitclass.generate_slots"
    },
    {
      "code": "dynamic",
      "line": 146,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitclass.generate_slots"
    }
  ],
  "mypyc/codegen/emitmodule.py": [
    {
      "code": "attr-defined",
      "line": 12,
      "message": "Module \"mypy.build\" does not explicitly export attribute \"BuildSource\"; implicit reexport disabled",
      "target": "mypyc.codegen.emitmodule"
    },
    {
      "code": "dynamic",
      "line": 72,
      "message": "Expression type contains \"Any\" (has type \"Type[List[Any]]\")",
      "target": "mypyc.codegen.emitmodule"
    },
    {
      "code": "dynamic",
      "line": 72,
      "message": "Expression type contains \"Any\" (has type \"Type[List[Any]]\")",
      "target": "mypyc.codegen.emitmodule"
    },
    {
      "code": "dynamic",
      "line": 72,
      "message": "Expression type contains \"Any\" (has type \"Type[List[Any]]\")",
      "target": "mypyc.codegen.emitmodule"
    },
    {
      "code": "dynamic",
      "line": 72,
      "message": "Expression type contains \"Any\" (has type \"Type[List[Any]]\")",
      "target": "mypyc.codegen.emitmodule"
    },
    {
      "code": "no-any-unimported",
      "line": 97,
      "message": "Argument 4 to \"__init__\" becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 101,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 101,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 101,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 101,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 103,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 103,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Optional[str], List[Any]]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.__init__"
    },
    {
      "code": "dynamic",
      "line": 137,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 147,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 147,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 147,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 147,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 147,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 154,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "dynamic",
      "line": 154,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.MypycPlugin.report_config_data"
    },
    {
      "code": "no-any-unimported",
      "line": 164,
      "message": "Argument 1 to \"parse_and_typecheck\" becomes \"List[Any]\" due to an unfollowed import",
      "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
    },
    {
      "code": "no-any-unimported",
      "line": 164,
      "message": "Argument 4 to \"parse_and_typecheck\" becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
    },
    {
      "code": "dynamic",
      "line": 173,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
    },
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.parse_and_typecheck"
    },
    {
      "code": "no-any-unimported",
      "line": 264,
      "message": "Argument 1 to \"compile_ir_to_c\" becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, str]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 276,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 277,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 277,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 284,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 284,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 284,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 284,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[Any, ModuleIR]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ModuleIR]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 285,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 286,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 287,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[Any, ModuleIR]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[Any, ModuleIR]]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 291,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, str]\")",
      "target": "mypyc.codegen.emitmodule.compile_ir_to_c"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
    },
    {
      "code": "dynamic",
      "line": 377,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.codegen.emitmodule.load_scc_from_cache"
    },
    {
      "code": "no-any-unimported",
      "line": 382,
      "message": "Argument 4 to \"compile_modules_to_c\" becomes \"List[Tuple[List[Any], Optional[str]]]\" due to an unfollowed import",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 407,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 408,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 415,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 418,
      "message": "Expression type contains \"Any\" (has type \"Dict[Any, Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"Tuple[List[Any], Optional[str]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    },
    {
      "code": "dynamic",
      "line": 420,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.codegen.emitmodule.compile_modules_to_c"
    }
  ],
  "mypyc/codegen/literals.py": [
    {
      "code": "dynamic",
      "line": 56,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.codegen.literals.Literals.record_literal"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.literals.Literals.record_literal"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.literals.Literals.record_literal"
    },
    {
      "code": "dynamic",
      "line": 139,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.codegen.literals.Literals.encoded_tuple_values"
    },
    {
      "code": "dynamic",
      "line": 139,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.literals.Literals.encoded_tuple_values"
    },
    {
      "code": "dynamic",
      "line": 139,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.codegen.literals.Literals.encoded_tuple_values"
    }
  ],
  "mypyc/common.py": [
    {
      "code": "dynamic",
      "line": 70,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.common"
    }
  ],
  "mypyc/ir/class_ir.py": [
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[int, Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.concrete_subclasses"
    },
    {
      "code": "dynamic",
      "line": 282,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 297,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 303,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 304,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 311,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 312,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 316,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 316,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 322,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 323,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 324,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 324,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Optional[List[Any]]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 325,
      "message": "Expression type contains \"Any\" (has type \"Optional[List[Any]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 332,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 333,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 333,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 333,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 334,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression type contains \"Any\" (has type \"Generator[Tuple[Any, RType], None, None]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RType]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RType]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 348,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Generator[Tuple[Any, FuncDecl], None, None]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, FuncDecl]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, FuncDecl]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 350,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 351,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Generator[Tuple[Any, FuncIR], None, None]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, FuncIR]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, FuncIR]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 353,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression type contains \"Any\" (has type \"Generator[Tuple[Tuple[ClassIR, Any], FuncIR], None, None]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 354,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Tuple[ClassIR, Any], FuncIR]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Tuple[ClassIR, Any], FuncIR]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression type contains \"Any\" (has type \"Tuple[ClassIR, Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression type contains \"Any\" (has type \"Tuple[ClassIR, Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 355,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression type contains \"Any\" (has type \"Generator[Tuple[Any, RType], None, None]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 357,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RType]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RType]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 358,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 360,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 360,
      "message": "Expression type contains \"Any\" (has type \"Generator[Tuple[Any, Tuple[FuncIR, Optional[FuncIR]]], None, None]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 360,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Tuple[FuncIR, Optional[FuncIR]]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Tuple[FuncIR, Optional[FuncIR]]]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 361,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 366,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 367,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 367,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 367,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 367,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 367,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 367,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 372,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 373,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 374,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 375,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.ClassIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 395,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.class_ir.serialize_vtable_entry"
    },
    {
      "code": "dynamic",
      "line": 409,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.class_ir.deserialize_vtable_entry"
    }
  ],
  "mypyc/ir/func_ir.py": [
    {
      "code": "dynamic",
      "line": 38,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.func_ir.RuntimeArg.serialize"
    },
    {
      "code": "dynamic",
      "line": 64,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.func_ir.FuncSignature.serialize"
    },
    {
      "code": "dynamic",
      "line": 64,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.func_ir.FuncSignature.serialize"
    },
    {
      "code": "dynamic",
      "line": 64,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.func_ir.FuncSignature.serialize"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncSignature.deserialize"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncSignature.deserialize"
    },
    {
      "code": "dynamic",
      "line": 144,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.func_ir.FuncDecl.serialize"
    },
    {
      "code": "dynamic",
      "line": 159,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 159,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 160,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 160,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 160,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 161,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.func_ir.FuncDecl.get_id_from_json"
    },
    {
      "code": "dynamic",
      "line": 243,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.func_ir.FuncIR.serialize"
    }
  ],
  "mypyc/ir/module_ir.py": [
    {
      "code": "dynamic",
      "line": 29,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 32,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 33,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 33,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 34,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, List[Any]]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 34,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.serialize"
    },
    {
      "code": "dynamic",
      "line": 42,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 42,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 42,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 43,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 43,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 44,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 44,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 44,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 44,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RType]\")",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 44,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 44,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.ModuleIR.deserialize"
    },
    {
      "code": "dynamic",
      "line": 65,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    },
    {
      "code": "dynamic",
      "line": 73,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    },
    {
      "code": "dynamic",
      "line": 74,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.module_ir.deserialize_modules"
    }
  ],
  "mypyc/ir/ops.py": [
    {
      "code": "dynamic",
      "line": 1214,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypyc.ir.ops"
    }
  ],
  "mypyc/ir/pprint.py": [
    {
      "code": "dynamic",
      "line": 203,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 217,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 217,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 217,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 225,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 225,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 228,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 235,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 238,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 241,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 245,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    },
    {
      "code": "dynamic",
      "line": 249,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.pprint.IRPrettyPrintVisitor.format"
    }
  ],
  "mypyc/ir/rtypes.py": [
    {
      "code": "dynamic",
      "line": 90,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.rtypes.deserialize_type"
    },
    {
      "code": "dynamic",
      "line": 92,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.rtypes.deserialize_type"
    },
    {
      "code": "dynamic",
      "line": 511,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.rtypes.RTuple.serialize"
    },
    {
      "code": "dynamic",
      "line": 515,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.rtypes.RTuple.deserialize"
    },
    {
      "code": "dynamic",
      "line": 515,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.rtypes.RTuple.deserialize"
    },
    {
      "code": "dynamic",
      "line": 732,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.ir.rtypes.RUnion.serialize"
    },
    {
      "code": "dynamic",
      "line": 736,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.rtypes.RUnion.deserialize"
    },
    {
      "code": "dynamic",
      "line": 736,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.ir.rtypes.RUnion.deserialize"
    }
  ],
  "mypyc/irbuild/builder.py": [
    {
      "code": "dynamic",
      "line": 162,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.builder.IRBuilder.accept"
    },
    {
      "code": "dynamic",
      "line": 1167,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.irbuild.builder.IRBuilder.catch_errors"
    }
  ],
  "mypyc/irbuild/classdef.py": [
    {
      "code": "dynamic",
      "line": 86,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.classdef.transform_class_def"
    },
    {
      "code": "dynamic",
      "line": 94,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.classdef.transform_class_def"
    }
  ],
  "mypyc/irbuild/constant_fold.py": [
    {
      "code": "no-any-return",
      "line": 82,
      "message": "Returning Any from function declared to return \"Optional[int]\"",
      "target": "mypyc.irbuild.constant_fold.constant_fold_binary_int_op"
    },
    {
      "code": "dynamic",
      "line": 82,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.constant_fold.constant_fold_binary_int_op"
    }
  ],
  "mypyc/irbuild/expression.py": [
    {
      "code": "dynamic",
      "line": 140,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.expression.transform_member_expr"
    }
  ],
  "mypyc/irbuild/function.py": [
    {
      "code": "dynamic",
      "line": 122,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypyc.irbuild.function.transform_lambda_expr"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Any]\")",
      "target": "mypyc.irbuild.function.gen_func_item"
    },
    {
      "code": "dynamic",
      "line": 279,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.function.gen_func_item"
    }
  ],
  "mypyc/irbuild/ll_builder.py": [
    {
      "code": "attr-defined",
      "line": 20,
      "message": "Module \"mypy.checkexpr\" does not explicitly export attribute \"map_actuals_to_formals\"; implicit reexport disabled",
      "target": "mypyc.irbuild.ll_builder"
    },
    {
      "code": "dynamic",
      "line": 660,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 664,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], AnyType]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 669,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RuntimeArg]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 669,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RuntimeArg]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 669,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 669,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Any, RuntimeArg]]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 669,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 669,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 671,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RuntimeArg]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, RuntimeArg]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Any, RuntimeArg]]\")",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 683,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 690,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 693,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 693,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 693,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 693,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 693,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 693,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    },
    {
      "code": "dynamic",
      "line": 695,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.ll_builder.LowLevelIRBuilder.native_args_to_positional"
    }
  ],
  "mypyc/irbuild/main.py": [
    {
      "code": "dynamic",
      "line": 47,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.irbuild.main"
    },
    {
      "code": "dynamic",
      "line": 48,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.irbuild.main"
    },
    {
      "code": "dynamic",
      "line": 48,
      "message": "Expression type contains \"Any\" (has type \"Callable[[F], F]\")",
      "target": "mypyc.irbuild.main"
    },
    {
      "code": "dynamic",
      "line": 48,
      "message": "Expression type contains \"Any\" (has type \"Callable[[F], F]\")",
      "target": "mypyc.irbuild.main"
    },
    {
      "code": "dynamic",
      "line": 51,
      "message": "Expression type contains \"Any\" (has type \"Callable[[F], F]\")",
      "target": "mypyc.irbuild.main"
    }
  ],
  "mypyc/irbuild/mapper.py": [
    {
      "code": "dynamic",
      "line": 83,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypyc.irbuild.mapper.Mapper.type_to_rtype"
    },
    {
      "code": "dynamic",
      "line": 124,
      "message": "Expression type contains \"Any\" (has type \"Type[CallableType]\")",
      "target": "mypyc.irbuild.mapper.Mapper.fdef_to_sig"
    }
  ],
  "mypyc/irbuild/prepare.py": [
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.irbuild.prepare.prepare_class_def"
    },
    {
      "code": "dynamic",
      "line": 178,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.irbuild.prepare.prepare_class_def"
    },
    {
      "code": "dynamic",
      "line": 178,
      "message": "Expression type contains \"Any\" (has type \"Optional[Any]\")",
      "target": "mypyc.irbuild.prepare.prepare_class_def"
    }
  ],
  "mypyc/irbuild/util.py": [
    {
      "code": "dynamic",
      "line": 61,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.irbuild.util.get_mypyc_attr_literal"
    },
    {
      "code": "dynamic",
      "line": 87,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.irbuild.util.get_mypyc_attrs"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.irbuild.util.get_mypyc_attrs"
    },
    {
      "code": "dynamic",
      "line": 96,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.irbuild.util.get_mypyc_attrs"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.irbuild.util.get_mypyc_attrs"
    },
    {
      "code": "dynamic",
      "line": 98,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.irbuild.util.get_mypyc_attrs"
    },
    {
      "code": "dynamic",
      "line": 100,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.irbuild.util.get_mypyc_attrs"
    }
  ],
  "mypyc/test/test_analysis.py": [
    {
      "code": "dynamic",
      "line": 70,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], Tuple[Any, Any]]\")",
      "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
    },
    {
      "code": "dynamic",
      "line": 70,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
    },
    {
      "code": "dynamic",
      "line": 70,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
    },
    {
      "code": "dynamic",
      "line": 70,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
    },
    {
      "code": "dynamic",
      "line": 70,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_analysis.TestAnalysis.run_case"
    }
  ],
  "mypyc/test/test_cheader.py": [
    {
      "code": "unreachable",
      "line": 31,
      "message": "Statement is unreachable",
      "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
    },
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
    },
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
    },
    {
      "code": "dynamic",
      "line": 40,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_cheader.TestHeaderInclusion.test_primitives_included_in_header"
    }
  ],
  "mypyc/test/test_commandline.py": [
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    },
    {
      "code": "dynamic",
      "line": 39,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression type contains \"Any\" (has type \"Union[List[str], Any]\")",
      "target": "mypyc.test.test_commandline.TestCommandLine.run_case"
    }
  ],
  "mypyc/test/test_emitclass.py": [
    {
      "code": "dynamic",
      "line": 9,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypyc.test.test_emitclass.TestEmitClass.test_slot_key"
    }
  ],
  "mypyc/test/test_exceptions.py": [
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_exceptions.TestExceptionTransform.run_case"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression type contains \"Any\" (has type \"Generator[Any, None, None]\")",
      "target": "mypyc.test.test_exceptions.TestExceptionTransform.run_case"
    }
  ],
  "mypyc/test/test_external.py": [
    {
      "code": "dynamic",
      "line": 17,
      "message": "Expression type contains \"Any\" (has type \"Callable[[_FT], _FT]\")",
      "target": "mypyc.test.test_external"
    }
  ],
  "mypyc/test/test_run.py": [
    {
      "code": "dynamic",
      "line": 102,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 102,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 106,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 106,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 109,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.run_setup"
    },
    {
      "code": "dynamic",
      "line": 171,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 171,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 171,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "attr-defined",
      "line": 193,
      "message": "Module has no attribute \"BuildSource\"; maybe \"BuildSourceSet\"?",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 193,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 194,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "attr-defined",
      "line": 206,
      "message": "Module has no attribute \"BuildSource\"; maybe \"BuildSourceSet\"?",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 206,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 213,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 213,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 214,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 214,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 216,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 216,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 219,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 219,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 219,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 224,
      "message": "Expression type contains \"Any\" (has type \"List[Any]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 227,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 234,
      "message": "Expression type contains \"Any\" (has type \"List[Tuple[List[Any], Optional[str]]]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 256,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 280,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 300,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 307,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, bool]\")",
      "target": "mypyc.test.test_run.TestRun.run_case_step"
    },
    {
      "code": "dynamic",
      "line": 340,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.test.test_run.TestRun.get_separate"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.TestRun.get_separate"
    },
    {
      "code": "dynamic",
      "line": 347,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.TestRun.get_separate"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 391,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], str]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    },
    {
      "code": "dynamic",
      "line": 394,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.test_run.fix_native_line_number"
    }
  ],
  "mypyc/test/test_serialization.py": [
    {
      "code": "dynamic",
      "line": 18,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 19,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 20,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 22,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.get_dict"
    },
    {
      "code": "dynamic",
      "line": 25,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.test.test_serialization.get_function_dict"
    },
    {
      "code": "dynamic",
      "line": 27,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.get_function_dict"
    },
    {
      "code": "dynamic",
      "line": 28,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.get_function_dict"
    },
    {
      "code": "dynamic",
      "line": 29,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.get_function_dict"
    },
    {
      "code": "dynamic",
      "line": 30,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.get_function_dict"
    },
    {
      "code": "dynamic",
      "line": 33,
      "message": "Explicit \"Any\" is not allowed",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Tuple[str, Type[Any], Type[Any]]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression type contains \"Any\" (has type \"Type[Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 49,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 50,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 51,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 51,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 51,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 51,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 52,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 53,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Tuple[Any, Any], Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Tuple[Any, Any], Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Tuple[Any, Any], Any]]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 54,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 55,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 55,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 55,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 56,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 57,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 58,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 60,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 61,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 61,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Tuple[Any, Any]]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"Tuple[int, Tuple[Any, Any]]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, Any]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"enumerate[Tuple[Any, Any]]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression type contains \"Any\" (has type \"zip[Tuple[Any, Any]]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 62,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 63,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 64,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 65,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 65,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 66,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 67,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression type contains \"Any\" (has type \"Union[Any, str]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 69,
      "message": "Expression type contains \"Any\" (has type \"Tuple[Any, ...]\")",
      "target": "mypyc.test.test_serialization.assert_blobs_same"
    },
    {
      "code": "dynamic",
      "line": 84,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.assert_modules_same"
    },
    {
      "code": "dynamic",
      "line": 84,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.assert_modules_same"
    },
    {
      "code": "dynamic",
      "line": 87,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.assert_modules_same"
    },
    {
      "code": "dynamic",
      "line": 87,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.assert_modules_same"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.assert_modules_same"
    },
    {
      "code": "dynamic",
      "line": 89,
      "message": "Expression type contains \"Any\" (has type \"Dict[str, Any]\")",
      "target": "mypyc.test.test_serialization.assert_modules_same"
    }
  ],
  "mypyc/test/testutil.py": [
    {
      "code": "attr-defined",
      "line": 104,
      "message": "Module has no attribute \"BuildSource\"; maybe \"BuildSourceSet\"?",
      "target": "mypyc.test.testutil.build_ir_for_single_file"
    },
    {
      "code": "dynamic",
      "line": 104,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.testutil.build_ir_for_single_file"
    },
    {
      "code": "dynamic",
      "line": 107,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.testutil.build_ir_for_single_file"
    },
    {
      "code": "dynamic",
      "line": 163,
      "message": "Expression type contains \"Any\" (has type \"Union[Literal[False], Any]\")",
      "target": "mypyc.test.testutil.assert_test_output"
    },
    {
      "code": "dynamic",
      "line": 163,
      "message": "Expression has type \"Any\"",
      "target": "mypyc.test.testutil.assert_test_output"
    },
    {
      "code": "dynamic",
      "line": 176,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypyc.test.testutil.get_func_names"
    },
    {
      "code": "dynamic",
      "line": 176,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.testutil.get_func_names"
    },
    {
      "code": "dynamic",
      "line": 176,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.testutil.get_func_names"
    },
    {
      "code": "dynamic",
      "line": 177,
      "message": "Expression type contains \"Any\" (has type \"List[Union[str, Any]]\")",
      "target": "mypyc.test.testutil.get_func_names"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.testutil.infer_ir_build_options_from_test_name"
    },
    {
      "code": "dynamic",
      "line": 263,
      "message": "Expression type contains \"Any\" (has type \"Union[str, Any]\")",
      "target": "mypyc.test.testutil.infer_ir_build_options_from_test_name"
    }
  ],
  "mypyc/transform/refcount.py": [
    {
      "code": "dynamic",
      "line": 197,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypyc.transform.refcount.after_branch_decrefs"
    },
    {
      "code": "dynamic",
      "line": 212,
      "message": "Expression type contains \"Any\" (has type \"Callable[[Any], int]\")",
      "target": "mypyc.transform.refcount.after_branch_increfs"
    }
  ]
}